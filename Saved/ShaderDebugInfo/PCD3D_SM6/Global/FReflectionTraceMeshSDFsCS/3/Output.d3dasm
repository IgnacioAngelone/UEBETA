;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
; shader hash: baced94cb8fc756aca33abe6b67f56d1
;
; Pipeline Runtime Information: 
;
; Compute Shader
; NumThreads=(32,1,1)
;
;
; Buffer Definitions:
;
; cbuffer _RootShaderParameters
; {
;
;   struct _RootShaderParameters
;   {
;
;       float DiffuseColorBoost;                      ; Offset:   64
;       float SkylightLeaking;                        ; Offset:   68
;       float SkylightLeakingRoughness;               ; Offset:   72
;       float InvFullSkylightLeakingDistance;         ; Offset:   76
;       uint SampleHeightFog;                         ; Offset:   80
;       uint SurfaceCacheFeedbackBufferSize;          ; Offset:  144
;       uint SurfaceCacheFeedbackBufferTileWrapMask;  ; Offset:  148
;       uint2 SurfaceCacheFeedbackBufferTileJitter;   ; Offset:  152
;       float SurfaceCacheFeedbackResLevelBias;       ; Offset:  160
;       uint SurfaceCacheUpdateFrameIndex;            ; Offset:  164
;       uint NumSceneObjects;                         ; Offset:  272
;       uint NumSceneHeightfieldObjects;              ; Offset:  296
;       float3 DistanceFieldBrickSize;                ; Offset:  352
;       float3 DistanceFieldUniqueDataBrickSize;      ; Offset:  368
;       uint3 DistanceFieldBrickAtlasSizeInBricks;    ; Offset:  384
;       uint3 DistanceFieldBrickAtlasMask;            ; Offset:  400
;       uint3 DistanceFieldBrickAtlasSizeLog2;        ; Offset:  416
;       float3 DistanceFieldBrickAtlasTexelSize;      ; Offset:  432
;       float3 DistanceFieldBrickAtlasHalfTexelSize;  ; Offset:  448
;       float3 DistanceFieldBrickOffsetToAtlasUVScale;; Offset:  464
;       float3 DistanceFieldUniqueDataBrickSizeInAtlasTexels;; Offset:  480
;       float MeshSDFNotCoveredExpandSurfaceScale;    ; Offset:  496
;       float MeshSDFNotCoveredMinStepScale;          ; Offset:  500
;       float MeshSDFDitheredTransparencyStepThreshold;; Offset:  504
;       uint CardGridPixelSizeShift;                  ; Offset:  536
;       float3 CardGridZParams;                       ; Offset:  544
;       uint3 CullGridSize;                           ; Offset:  560
;       uint ReflectionDownsampleFactor;              ; Offset:  640
;       uint2 ReflectionTracingViewSize;              ; Offset:  648
;       uint2 ReflectionTracingBufferSize;            ; Offset:  656
;       float MaxRayIntensity;                        ; Offset:  664
;       float ReflectionSmoothBias;                   ; Offset:  668
;       uint ReflectionPass;                          ; Offset:  672
;       uint UseJitter;                               ; Offset:  676
;       uint UseHighResSurface;                       ; Offset:  680
;       float NearFieldMaxTraceDistance;              ; Offset:  688
;       float CardTraceEndDistanceFromCamera;         ; Offset:  852
;       float MaxTraceDistance;                       ; Offset:  872
;       float MaxMeshSDFTraceDistance;                ; Offset:  876
;       float SurfaceBias;                            ; Offset:  880
;       int HeightfieldMaxTracingSteps;               ; Offset:  896
;   
;   } _RootShaderParameters;                          ; Offset:    0 Size:   900
;
; }
;
; cbuffer UniformBufferConstants_View
; {
;
;   struct hostlayout.UniformBufferConstants_View
;   {
;
;       row_major float4x4 View_TranslatedWorldToClip;; Offset:    0
;       row_major float4x4 View_RelativeWorldToClip;  ; Offset:   64
;       row_major float4x4 View_ClipToRelativeWorld;  ; Offset:  128
;       row_major float4x4 View_TranslatedWorldToView;; Offset:  192
;       row_major float4x4 View_ViewToTranslatedWorld;; Offset:  256
;       row_major float4x4 View_TranslatedWorldToCameraView;; Offset:  320
;       row_major float4x4 View_CameraViewToTranslatedWorld;; Offset:  384
;       row_major float4x4 View_ViewToClip;           ; Offset:  448
;       row_major float4x4 View_ViewToClipNoAA;       ; Offset:  512
;       row_major float4x4 View_ClipToView;           ; Offset:  576
;       row_major float4x4 View_ClipToTranslatedWorld;; Offset:  640
;       row_major float4x4 View_SVPositionToTranslatedWorld;; Offset:  704
;       row_major float4x4 View_ScreenToRelativeWorld;; Offset:  768
;       row_major float4x4 View_ScreenToTranslatedWorld;; Offset:  832
;       row_major float4x4 View_MobileMultiviewShadowTransform;; Offset:  896
;       float3 View_ViewTilePosition;                 ; Offset:  960
;       float PrePadding_View_972;                    ; Offset:  972
;       float3 View_MatrixTilePosition;               ; Offset:  976
;       float PrePadding_View_988;                    ; Offset:  988
;       float3 View_ViewForward;                      ; Offset:  992
;       float PrePadding_View_1004;                   ; Offset: 1004
;       float3 View_ViewUp;                           ; Offset: 1008
;       float PrePadding_View_1020;                   ; Offset: 1020
;       float3 View_ViewRight;                        ; Offset: 1024
;       float PrePadding_View_1036;                   ; Offset: 1036
;       float3 View_HMDViewNoRollUp;                  ; Offset: 1040
;       float PrePadding_View_1052;                   ; Offset: 1052
;       float3 View_HMDViewNoRollRight;               ; Offset: 1056
;       float PrePadding_View_1068;                   ; Offset: 1068
;       float4 View_InvDeviceZToWorldZTransform;      ; Offset: 1072
;       float4 View_ScreenPositionScaleBias;          ; Offset: 1088
;       float3 View_RelativeWorldCameraOrigin;        ; Offset: 1104
;       float PrePadding_View_1116;                   ; Offset: 1116
;       float3 View_TranslatedWorldCameraOrigin;      ; Offset: 1120
;       float PrePadding_View_1132;                   ; Offset: 1132
;       float3 View_RelativeWorldViewOrigin;          ; Offset: 1136
;       float PrePadding_View_1148;                   ; Offset: 1148
;       float3 View_RelativePreViewTranslation;       ; Offset: 1152
;       float PrePadding_View_1164;                   ; Offset: 1164
;       row_major float4x4 View_PrevViewToClip;       ; Offset: 1168
;       row_major float4x4 View_PrevClipToView;       ; Offset: 1232
;       row_major float4x4 View_PrevTranslatedWorldToClip;; Offset: 1296
;       row_major float4x4 View_PrevTranslatedWorldToView;; Offset: 1360
;       row_major float4x4 View_PrevViewToTranslatedWorld;; Offset: 1424
;       row_major float4x4 View_PrevTranslatedWorldToCameraView;; Offset: 1488
;       row_major float4x4 View_PrevCameraViewToTranslatedWorld;; Offset: 1552
;       float3 View_PrevTranslatedWorldCameraOrigin;  ; Offset: 1616
;       float PrePadding_View_1628;                   ; Offset: 1628
;       float3 View_PrevRelativeWorldCameraOrigin;    ; Offset: 1632
;       float PrePadding_View_1644;                   ; Offset: 1644
;       float3 View_PrevRelativeWorldViewOrigin;      ; Offset: 1648
;       float PrePadding_View_1660;                   ; Offset: 1660
;       float3 View_RelativePrevPreViewTranslation;   ; Offset: 1664
;       float PrePadding_View_1676;                   ; Offset: 1676
;       row_major float4x4 View_PrevClipToRelativeWorld;; Offset: 1680
;       row_major float4x4 View_PrevScreenToTranslatedWorld;; Offset: 1744
;       row_major float4x4 View_ClipToPrevClip;       ; Offset: 1808
;       row_major float4x4 View_ClipToPrevClipWithAA; ; Offset: 1872
;       float4 View_TemporalAAJitter;                 ; Offset: 1936
;       float4 View_GlobalClippingPlane;              ; Offset: 1952
;       float2 View_FieldOfViewWideAngles;            ; Offset: 1968
;       float2 View_PrevFieldOfViewWideAngles;        ; Offset: 1976
;       float4 View_ViewRectMin;                      ; Offset: 1984
;       float4 View_ViewSizeAndInvSize;               ; Offset: 2000
;       uint4 View_ViewRectMinAndSize;                ; Offset: 2016
;       float4 View_LightProbeSizeRatioAndInvSizeRatio;; Offset: 2032
;       float4 View_BufferSizeAndInvSize;             ; Offset: 2048
;       float4 View_BufferBilinearUVMinMax;           ; Offset: 2064
;       float4 View_ScreenToViewSpace;                ; Offset: 2080
;       float2 View_BufferToSceneTextureScale;        ; Offset: 2096
;       float2 View_ResolutionFractionAndInv;         ; Offset: 2104
;       int View_NumSceneColorMSAASamples;            ; Offset: 2112
;       float View_ProjectionDepthThicknessScale;     ; Offset: 2116
;       float View_PreExposure;                       ; Offset: 2120
;       float View_OneOverPreExposure;                ; Offset: 2124
;       float4 View_DiffuseOverrideParameter;         ; Offset: 2128
;       float4 View_SpecularOverrideParameter;        ; Offset: 2144
;       float4 View_NormalOverrideParameter;          ; Offset: 2160
;       float2 View_RoughnessOverrideParameter;       ; Offset: 2176
;       float View_PrevFrameGameTime;                 ; Offset: 2184
;       float View_PrevFrameRealTime;                 ; Offset: 2188
;       float View_OutOfBoundsMask;                   ; Offset: 2192
;       float PrePadding_View_2196;                   ; Offset: 2196
;       float PrePadding_View_2200;                   ; Offset: 2200
;       float PrePadding_View_2204;                   ; Offset: 2204
;       float3 View_WorldCameraMovementSinceLastFrame;; Offset: 2208
;       float View_CullingSign;                       ; Offset: 2220
;       float View_NearPlane;                         ; Offset: 2224
;       float View_GameTime;                          ; Offset: 2228
;       float View_RealTime;                          ; Offset: 2232
;       float View_DeltaTime;                         ; Offset: 2236
;       float View_MaterialTextureMipBias;            ; Offset: 2240
;       float View_MaterialTextureDerivativeMultiply; ; Offset: 2244
;       uint View_Random;                             ; Offset: 2248
;       uint View_FrameNumber;                        ; Offset: 2252
;       uint View_FrameCounter;                       ; Offset: 2256
;       uint View_StateFrameIndexMod8;                ; Offset: 2260
;       uint View_StateFrameIndex;                    ; Offset: 2264
;       uint View_DebugViewModeMask;                  ; Offset: 2268
;       uint View_WorldIsPaused;                      ; Offset: 2272
;       float View_CameraCut;                         ; Offset: 2276
;       float View_UnlitViewmodeMask;                 ; Offset: 2280
;       float PrePadding_View_2284;                   ; Offset: 2284
;       float4 View_DirectionalLightColor;            ; Offset: 2288
;       float3 View_DirectionalLightDirection;        ; Offset: 2304
;       float PrePadding_View_2316;                   ; Offset: 2316
;       float4 View_TranslucencyLightingVolumeMin[2]; ; Offset: 2320
;       float4 View_TranslucencyLightingVolumeInvSize[2];; Offset: 2352
;       float4 View_TemporalAAParams;                 ; Offset: 2384
;       float4 View_CircleDOFParams;                  ; Offset: 2400
;       float View_DepthOfFieldSensorWidth;           ; Offset: 2416
;       float View_DepthOfFieldFocalDistance;         ; Offset: 2420
;       float View_DepthOfFieldScale;                 ; Offset: 2424
;       float View_DepthOfFieldFocalLength;           ; Offset: 2428
;       float View_DepthOfFieldFocalRegion;           ; Offset: 2432
;       float View_DepthOfFieldNearTransitionRegion;  ; Offset: 2436
;       float View_DepthOfFieldFarTransitionRegion;   ; Offset: 2440
;       float View_MotionBlurNormalizedToPixel;       ; Offset: 2444
;       float View_GeneralPurposeTweak;               ; Offset: 2448
;       float View_GeneralPurposeTweak2;              ; Offset: 2452
;       float View_DemosaicVposOffset;                ; Offset: 2456
;       float View_DecalDepthBias;                    ; Offset: 2460
;       float3 View_IndirectLightingColorScale;       ; Offset: 2464
;       float PrePadding_View_2476;                   ; Offset: 2476
;       float3 View_PrecomputedIndirectLightingColorScale;; Offset: 2480
;       float PrePadding_View_2492;                   ; Offset: 2492
;       float3 View_PrecomputedIndirectSpecularColorScale;; Offset: 2496
;       float PrePadding_View_2508;                   ; Offset: 2508
;       float4 View_AtmosphereLightDirection[2];      ; Offset: 2512
;       float4 View_AtmosphereLightIlluminanceOnGroundPostTransmittance[2];; Offset: 2544
;       float4 View_AtmosphereLightIlluminanceOuterSpace[2];; Offset: 2576
;       float4 View_AtmosphereLightDiscLuminance[2];  ; Offset: 2608
;       float4 View_AtmosphereLightDiscCosHalfApexAngle_PPTrans[2];; Offset: 2640
;       float4 View_SkyViewLutSizeAndInvSize;         ; Offset: 2672
;       float3 View_SkyCameraTranslatedWorldOrigin;   ; Offset: 2688
;       float PrePadding_View_2700;                   ; Offset: 2700
;       float4 View_SkyPlanetTranslatedWorldCenterAndViewHeight;; Offset: 2704
;       row_major float4x4 View_SkyViewLutReferential;; Offset: 2720
;       float4 View_SkyAtmosphereSkyLuminanceFactor;  ; Offset: 2784
;       float View_SkyAtmospherePresentInScene;       ; Offset: 2800
;       float View_SkyAtmosphereHeightFogContribution;; Offset: 2804
;       float View_SkyAtmosphereBottomRadiusKm;       ; Offset: 2808
;       float View_SkyAtmosphereTopRadiusKm;          ; Offset: 2812
;       float4 View_SkyAtmosphereCameraAerialPerspectiveVolumeSizeAndInvSize;; Offset: 2816
;       float View_SkyAtmosphereAerialPerspectiveStartDepthKm;; Offset: 2832
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolution;; Offset: 2836
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolutionInv;; Offset: 2840
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKm;; Offset: 2844
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKmInv;; Offset: 2848
;       float View_SkyAtmosphereApplyCameraAerialPerspectiveVolume;; Offset: 2852
;       float PrePadding_View_2856;                   ; Offset: 2856
;       float PrePadding_View_2860;                   ; Offset: 2860
;       float3 View_NormalCurvatureToRoughnessScaleBias;; Offset: 2864
;       float View_RenderingReflectionCaptureMask;    ; Offset: 2876
;       float View_RealTimeReflectionCapture;         ; Offset: 2880
;       float View_RealTimeReflectionCapturePreExposure;; Offset: 2884
;       float PrePadding_View_2888;                   ; Offset: 2888
;       float PrePadding_View_2892;                   ; Offset: 2892
;       float4 View_AmbientCubemapTint;               ; Offset: 2896
;       float View_AmbientCubemapIntensity;           ; Offset: 2912
;       float View_SkyLightApplyPrecomputedBentNormalShadowingFlag;; Offset: 2916
;       float View_SkyLightAffectReflectionFlag;      ; Offset: 2920
;       float View_SkyLightAffectGlobalIlluminationFlag;; Offset: 2924
;       float4 View_SkyLightColor;                    ; Offset: 2928
;       float4 View_MobileSkyIrradianceEnvironmentMap[8];; Offset: 2944
;       float View_MobilePreviewMode;                 ; Offset: 3072
;       float View_HMDEyePaddingOffset;               ; Offset: 3076
;       float View_ReflectionCubemapMaxMip;           ; Offset: 3080
;       float View_ShowDecalsMask;                    ; Offset: 3084
;       uint View_DistanceFieldAOSpecularOcclusionMode;; Offset: 3088
;       float View_IndirectCapsuleSelfShadowingIntensity;; Offset: 3092
;       float PrePadding_View_3096;                   ; Offset: 3096
;       float PrePadding_View_3100;                   ; Offset: 3100
;       float3 View_ReflectionEnvironmentRoughnessMixingScaleBiasAndLargestWeight;; Offset: 3104
;       int View_StereoPassIndex;                     ; Offset: 3116
;       float4 View_GlobalVolumeTranslatedCenterAndExtent[6];; Offset: 3120
;       float4 View_GlobalVolumeTranslatedWorldToUVAddAndMul[6];; Offset: 3216
;       float4 View_GlobalDistanceFieldMipTranslatedWorldToUVScale[6];; Offset: 3312
;       float4 View_GlobalDistanceFieldMipTranslatedWorldToUVBias[6];; Offset: 3408
;       float View_GlobalDistanceFieldMipFactor;      ; Offset: 3504
;       float View_GlobalDistanceFieldMipTransition;  ; Offset: 3508
;       int View_GlobalDistanceFieldClipmapSizeInPages;; Offset: 3512
;       int PrePadding_View_3516;                     ; Offset: 3516
;       float3 View_GlobalDistanceFieldInvPageAtlasSize;; Offset: 3520
;       float PrePadding_View_3532;                   ; Offset: 3532
;       float3 View_GlobalDistanceFieldInvCoverageAtlasSize;; Offset: 3536
;       float View_GlobalVolumeDimension;             ; Offset: 3548
;       float View_GlobalVolumeTexelSize;             ; Offset: 3552
;       float View_MaxGlobalDFAOConeDistance;         ; Offset: 3556
;       uint View_NumGlobalSDFClipmaps;               ; Offset: 3560
;       float View_CoveredExpandSurfaceScale;         ; Offset: 3564
;       float View_NotCoveredExpandSurfaceScale;      ; Offset: 3568
;       float View_NotCoveredMinStepScale;            ; Offset: 3572
;       float View_DitheredTransparencyStepThreshold; ; Offset: 3576
;       float View_DitheredTransparencyTraceThreshold;; Offset: 3580
;       int2 View_CursorPosition;                     ; Offset: 3584
;       float View_bCheckerboardSubsurfaceProfileRendering;; Offset: 3592
;       float PrePadding_View_3596;                   ; Offset: 3596
;       float3 View_VolumetricFogInvGridSize;         ; Offset: 3600
;       float PrePadding_View_3612;                   ; Offset: 3612
;       float3 View_VolumetricFogGridZParams;         ; Offset: 3616
;       float PrePadding_View_3628;                   ; Offset: 3628
;       float2 View_VolumetricFogSVPosToVolumeUV;     ; Offset: 3632
;       float2 View_VolumetricFogViewGridUVToPrevViewRectUV;; Offset: 3640
;       float2 View_VolumetricFogPrevViewGridRectUVToResourceUV;; Offset: 3648
;       float2 View_VolumetricFogPrevUVMax;           ; Offset: 3656
;       float2 View_VolumetricFogScreenToResourceUV;  ; Offset: 3664
;       float2 View_VolumetricFogUVMax;               ; Offset: 3672
;       float View_VolumetricFogMaxDistance;          ; Offset: 3680
;       float PrePadding_View_3684;                   ; Offset: 3684
;       float PrePadding_View_3688;                   ; Offset: 3688
;       float PrePadding_View_3692;                   ; Offset: 3692
;       float3 View_VolumetricLightmapWorldToUVScale; ; Offset: 3696
;       float PrePadding_View_3708;                   ; Offset: 3708
;       float3 View_VolumetricLightmapWorldToUVAdd;   ; Offset: 3712
;       float PrePadding_View_3724;                   ; Offset: 3724
;       float3 View_VolumetricLightmapIndirectionTextureSize;; Offset: 3728
;       float View_VolumetricLightmapBrickSize;       ; Offset: 3740
;       float3 View_VolumetricLightmapBrickTexelSize; ; Offset: 3744
;       float View_IndirectLightingCacheShowFlag;     ; Offset: 3756
;       float View_EyeToPixelSpreadAngle;             ; Offset: 3760
;       float PrePadding_View_3764;                   ; Offset: 3764
;       float PrePadding_View_3768;                   ; Offset: 3768
;       float PrePadding_View_3772;                   ; Offset: 3772
;       float4 View_XRPassthroughCameraUVs[2];        ; Offset: 3776
;       float View_GlobalVirtualTextureMipBias;       ; Offset: 3808
;       uint View_VirtualTextureFeedbackShift;        ; Offset: 3812
;       uint View_VirtualTextureFeedbackMask;         ; Offset: 3816
;       uint View_VirtualTextureFeedbackStride;       ; Offset: 3820
;       uint View_VirtualTextureFeedbackJitterOffset; ; Offset: 3824
;       uint View_VirtualTextureFeedbackSampleOffset; ; Offset: 3828
;       uint PrePadding_View_3832;                    ; Offset: 3832
;       uint PrePadding_View_3836;                    ; Offset: 3836
;       float4 View_RuntimeVirtualTextureMipLevel;    ; Offset: 3840
;       float2 View_RuntimeVirtualTexturePackHeight;  ; Offset: 3856
;       float PrePadding_View_3864;                   ; Offset: 3864
;       float PrePadding_View_3868;                   ; Offset: 3868
;       float4 View_RuntimeVirtualTextureDebugParams; ; Offset: 3872
;       float View_OverrideLandscapeLOD;              ; Offset: 3888
;       int View_FarShadowStaticMeshLODBias;          ; Offset: 3892
;       float View_MinRoughness;                      ; Offset: 3896
;       float PrePadding_View_3900;                   ; Offset: 3900
;       float4 View_HairRenderInfo;                   ; Offset: 3904
;       uint View_EnableSkyLight;                     ; Offset: 3920
;       uint View_HairRenderInfoBits;                 ; Offset: 3924
;       uint View_HairComponents;                     ; Offset: 3928
;       float View_bSubsurfacePostprocessEnabled;     ; Offset: 3932
;       float4 View_SSProfilesTextureSizeAndInvSize;  ; Offset: 3936
;       float4 View_SSProfilesPreIntegratedTextureSizeAndInvSize;; Offset: 3952
;       float4 View_SpecularProfileTextureSizeAndInvSize;; Offset: 3968
;       float3 View_PhysicsFieldClipmapCenter;        ; Offset: 3984
;       float View_PhysicsFieldClipmapDistance;       ; Offset: 3996
;       int View_PhysicsFieldClipmapResolution;       ; Offset: 4000
;       int View_PhysicsFieldClipmapExponent;         ; Offset: 4004
;       int View_PhysicsFieldClipmapCount;            ; Offset: 4008
;       int View_PhysicsFieldTargetCount;             ; Offset: 4012
;       int4 View_PhysicsFieldTargets[32];            ; Offset: 4016
;       uint View_GPUSceneViewId;                     ; Offset: 4528
;       float View_ViewResolutionFraction;            ; Offset: 4532
;       float View_SubSurfaceColorAsTransmittanceAtDistanceInMeters;; Offset: 4536
;       float PrePadding_View_4540;                   ; Offset: 4540
;       float4 View_TanAndInvTanHalfFOV;              ; Offset: 4544
;       float4 View_PrevTanAndInvTanHalfFOV;          ; Offset: 4560
;       float4 View_GlintLUTParameters0;              ; Offset: 4576
;       float4 View_GlintLUTParameters1;              ; Offset: 4592
;       uint BindlessSampler_View_MaterialTextureBilinearWrapedSampler;; Offset: 4608
;       uint PrePadding_View_4612;                    ; Offset: 4612
;       uint BindlessSampler_View_MaterialTextureBilinearClampedSampler;; Offset: 4616
;       uint PrePadding_View_4620;                    ; Offset: 4620
;       uint BindlessResource_View_VolumetricLightmapIndirectionTexture;; Offset: 4624
;       uint PrePadding_View_4628;                    ; Offset: 4628
;       uint BindlessResource_View_VolumetricLightmapBrickAmbientVector;; Offset: 4632
;       uint PrePadding_View_4636;                    ; Offset: 4636
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients0;; Offset: 4640
;       uint PrePadding_View_4644;                    ; Offset: 4644
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients1;; Offset: 4648
;       uint PrePadding_View_4652;                    ; Offset: 4652
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients2;; Offset: 4656
;       uint PrePadding_View_4660;                    ; Offset: 4660
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients3;; Offset: 4664
;       uint PrePadding_View_4668;                    ; Offset: 4668
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients4;; Offset: 4672
;       uint PrePadding_View_4676;                    ; Offset: 4676
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients5;; Offset: 4680
;       uint PrePadding_View_4684;                    ; Offset: 4684
;       uint BindlessResource_View_SkyBentNormalBrickTexture;; Offset: 4688
;       uint PrePadding_View_4692;                    ; Offset: 4692
;       uint BindlessResource_View_DirectionalLightShadowingBrickTexture;; Offset: 4696
;       uint PrePadding_View_4700;                    ; Offset: 4700
;       uint BindlessSampler_View_VolumetricLightmapBrickAmbientVectorSampler;; Offset: 4704
;       uint PrePadding_View_4708;                    ; Offset: 4708
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler0;; Offset: 4712
;       uint PrePadding_View_4716;                    ; Offset: 4716
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler1;; Offset: 4720
;       uint PrePadding_View_4724;                    ; Offset: 4724
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler2;; Offset: 4728
;       uint PrePadding_View_4732;                    ; Offset: 4732
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler3;; Offset: 4736
;       uint PrePadding_View_4740;                    ; Offset: 4740
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler4;; Offset: 4744
;       uint PrePadding_View_4748;                    ; Offset: 4748
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler5;; Offset: 4752
;       uint PrePadding_View_4756;                    ; Offset: 4756
;       uint BindlessSampler_View_SkyBentNormalTextureSampler;; Offset: 4760
;       uint PrePadding_View_4764;                    ; Offset: 4764
;       uint BindlessSampler_View_DirectionalLightShadowingTextureSampler;; Offset: 4768
;       uint PrePadding_View_4772;                    ; Offset: 4772
;       uint BindlessResource_View_GlobalDistanceFieldPageAtlasTexture;; Offset: 4776
;       uint PrePadding_View_4780;                    ; Offset: 4780
;       uint BindlessResource_View_GlobalDistanceFieldCoverageAtlasTexture;; Offset: 4784
;       uint PrePadding_View_4788;                    ; Offset: 4788
;       uint BindlessResource_View_GlobalDistanceFieldPageTableTexture;; Offset: 4792
;       uint PrePadding_View_4796;                    ; Offset: 4796
;       uint BindlessResource_View_GlobalDistanceFieldMipTexture;; Offset: 4800
;       uint PrePadding_View_4804;                    ; Offset: 4804
;       uint BindlessSampler_View_GlobalDistanceFieldPageAtlasTextureSampler;; Offset: 4808
;       uint PrePadding_View_4812;                    ; Offset: 4812
;       uint BindlessSampler_View_GlobalDistanceFieldCoverageAtlasTextureSampler;; Offset: 4816
;       uint PrePadding_View_4820;                    ; Offset: 4820
;       uint BindlessSampler_View_GlobalDistanceFieldMipTextureSampler;; Offset: 4824
;       uint PrePadding_View_4828;                    ; Offset: 4828
;       uint BindlessResource_View_AtmosphereTransmittanceTexture;; Offset: 4832
;       uint PrePadding_View_4836;                    ; Offset: 4836
;       uint BindlessSampler_View_AtmosphereTransmittanceTextureSampler;; Offset: 4840
;       uint PrePadding_View_4844;                    ; Offset: 4844
;       uint BindlessResource_View_AtmosphereIrradianceTexture;; Offset: 4848
;       uint PrePadding_View_4852;                    ; Offset: 4852
;       uint BindlessSampler_View_AtmosphereIrradianceTextureSampler;; Offset: 4856
;       uint PrePadding_View_4860;                    ; Offset: 4860
;       uint BindlessResource_View_AtmosphereInscatterTexture;; Offset: 4864
;       uint PrePadding_View_4868;                    ; Offset: 4868
;       uint BindlessSampler_View_AtmosphereInscatterTextureSampler;; Offset: 4872
;       uint PrePadding_View_4876;                    ; Offset: 4876
;       uint BindlessResource_View_PerlinNoiseGradientTexture;; Offset: 4880
;       uint PrePadding_View_4884;                    ; Offset: 4884
;       uint BindlessSampler_View_PerlinNoiseGradientTextureSampler;; Offset: 4888
;       uint PrePadding_View_4892;                    ; Offset: 4892
;       uint BindlessResource_View_PerlinNoise3DTexture;; Offset: 4896
;       uint PrePadding_View_4900;                    ; Offset: 4900
;       uint BindlessSampler_View_PerlinNoise3DTextureSampler;; Offset: 4904
;       uint PrePadding_View_4908;                    ; Offset: 4908
;       uint BindlessResource_View_SobolSamplingTexture;; Offset: 4912
;       uint PrePadding_View_4916;                    ; Offset: 4916
;       uint BindlessSampler_View_SharedPointWrappedSampler;; Offset: 4920
;       uint PrePadding_View_4924;                    ; Offset: 4924
;       uint BindlessSampler_View_SharedPointClampedSampler;; Offset: 4928
;       uint PrePadding_View_4932;                    ; Offset: 4932
;       uint BindlessSampler_View_SharedBilinearWrappedSampler;; Offset: 4936
;       uint PrePadding_View_4940;                    ; Offset: 4940
;       uint BindlessSampler_View_SharedBilinearClampedSampler;; Offset: 4944
;       uint PrePadding_View_4948;                    ; Offset: 4948
;       uint BindlessSampler_View_SharedBilinearAnisoClampedSampler;; Offset: 4952
;       uint PrePadding_View_4956;                    ; Offset: 4956
;       uint BindlessSampler_View_SharedTrilinearWrappedSampler;; Offset: 4960
;       uint PrePadding_View_4964;                    ; Offset: 4964
;       uint BindlessSampler_View_SharedTrilinearClampedSampler;; Offset: 4968
;       uint PrePadding_View_4972;                    ; Offset: 4972
;       uint BindlessResource_View_PreIntegratedBRDF; ; Offset: 4976
;       uint PrePadding_View_4980;                    ; Offset: 4980
;       uint BindlessSampler_View_PreIntegratedBRDFSampler;; Offset: 4984
;       uint PrePadding_View_4988;                    ; Offset: 4988
;       uint BindlessResource_View_SkyIrradianceEnvironmentMap;; Offset: 4992
;       uint PrePadding_View_4996;                    ; Offset: 4996
;       uint BindlessResource_View_TransmittanceLutTexture;; Offset: 5000
;       uint PrePadding_View_5004;                    ; Offset: 5004
;       uint BindlessSampler_View_TransmittanceLutTextureSampler;; Offset: 5008
;       uint PrePadding_View_5012;                    ; Offset: 5012
;       uint BindlessResource_View_SkyViewLutTexture; ; Offset: 5016
;       uint PrePadding_View_5020;                    ; Offset: 5020
;       uint BindlessSampler_View_SkyViewLutTextureSampler;; Offset: 5024
;       uint PrePadding_View_5028;                    ; Offset: 5028
;       uint BindlessResource_View_DistantSkyLightLutTexture;; Offset: 5032
;       uint PrePadding_View_5036;                    ; Offset: 5036
;       uint BindlessSampler_View_DistantSkyLightLutTextureSampler;; Offset: 5040
;       uint PrePadding_View_5044;                    ; Offset: 5044
;       uint BindlessResource_View_CameraAerialPerspectiveVolume;; Offset: 5048
;       uint PrePadding_View_5052;                    ; Offset: 5052
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeSampler;; Offset: 5056
;       uint PrePadding_View_5060;                    ; Offset: 5060
;       uint BindlessResource_View_CameraAerialPerspectiveVolumeMieOnly;; Offset: 5064
;       uint PrePadding_View_5068;                    ; Offset: 5068
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeMieOnlySampler;; Offset: 5072
;       uint PrePadding_View_5076;                    ; Offset: 5076
;       uint BindlessResource_View_CameraAerialPerspectiveVolumeRayOnly;; Offset: 5080
;       uint PrePadding_View_5084;                    ; Offset: 5084
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeRayOnlySampler;; Offset: 5088
;       uint PrePadding_View_5092;                    ; Offset: 5092
;       uint BindlessResource_View_HairScatteringLUTTexture;; Offset: 5096
;       uint PrePadding_View_5100;                    ; Offset: 5100
;       uint BindlessSampler_View_HairScatteringLUTSampler;; Offset: 5104
;       uint PrePadding_View_5108;                    ; Offset: 5108
;       uint BindlessResource_View_GGXLTCMatTexture;  ; Offset: 5112
;       uint PrePadding_View_5116;                    ; Offset: 5116
;       uint BindlessSampler_View_GGXLTCMatSampler;   ; Offset: 5120
;       uint PrePadding_View_5124;                    ; Offset: 5124
;       uint BindlessResource_View_GGXLTCAmpTexture;  ; Offset: 5128
;       uint PrePadding_View_5132;                    ; Offset: 5132
;       uint BindlessSampler_View_GGXLTCAmpSampler;   ; Offset: 5136
;       uint PrePadding_View_5140;                    ; Offset: 5140
;       uint BindlessResource_View_SheenLTCTexture;   ; Offset: 5144
;       uint PrePadding_View_5148;                    ; Offset: 5148
;       uint BindlessSampler_View_SheenLTCSampler;    ; Offset: 5152
;       uint PrePadding_View_5156;                    ; Offset: 5156
;       uint View_bShadingEnergyConservation;         ; Offset: 5160
;       uint View_bShadingEnergyPreservation;         ; Offset: 5164
;       uint BindlessResource_View_ShadingEnergyGGXSpecTexture;; Offset: 5168
;       uint PrePadding_View_5172;                    ; Offset: 5172
;       uint BindlessResource_View_ShadingEnergyGGXGlassTexture;; Offset: 5176
;       uint PrePadding_View_5180;                    ; Offset: 5180
;       uint BindlessResource_View_ShadingEnergyClothSpecTexture;; Offset: 5184
;       uint PrePadding_View_5188;                    ; Offset: 5188
;       uint BindlessResource_View_ShadingEnergyDiffuseTexture;; Offset: 5192
;       uint PrePadding_View_5196;                    ; Offset: 5196
;       uint BindlessSampler_View_ShadingEnergySampler;; Offset: 5200
;       uint PrePadding_View_5204;                    ; Offset: 5204
;       uint BindlessResource_View_GlintTexture;      ; Offset: 5208
;       uint PrePadding_View_5212;                    ; Offset: 5212
;       uint BindlessSampler_View_GlintSampler;       ; Offset: 5216
;       uint PrePadding_View_5220;                    ; Offset: 5220
;       uint BindlessResource_View_SimpleVolumeTexture;; Offset: 5224
;       uint PrePadding_View_5228;                    ; Offset: 5228
;       uint BindlessSampler_View_SimpleVolumeTextureSampler;; Offset: 5232
;       uint PrePadding_View_5236;                    ; Offset: 5236
;       uint BindlessResource_View_SimpleVolumeEnvTexture;; Offset: 5240
;       uint PrePadding_View_5244;                    ; Offset: 5244
;       uint BindlessSampler_View_SimpleVolumeEnvTextureSampler;; Offset: 5248
;       uint PrePadding_View_5252;                    ; Offset: 5252
;       uint BindlessResource_View_SSProfilesTexture; ; Offset: 5256
;       uint PrePadding_View_5260;                    ; Offset: 5260
;       uint BindlessSampler_View_SSProfilesSampler;  ; Offset: 5264
;       uint PrePadding_View_5268;                    ; Offset: 5268
;       uint BindlessSampler_View_SSProfilesTransmissionSampler;; Offset: 5272
;       uint PrePadding_View_5276;                    ; Offset: 5276
;       uint BindlessResource_View_SSProfilesPreIntegratedTexture;; Offset: 5280
;       uint PrePadding_View_5284;                    ; Offset: 5284
;       uint BindlessSampler_View_SSProfilesPreIntegratedSampler;; Offset: 5288
;       uint PrePadding_View_5292;                    ; Offset: 5292
;       uint BindlessResource_View_SpecularProfileTexture;; Offset: 5296
;       uint PrePadding_View_5300;                    ; Offset: 5300
;       uint BindlessSampler_View_SpecularProfileSampler;; Offset: 5304
;       uint PrePadding_View_5308;                    ; Offset: 5308
;       uint BindlessResource_View_WaterIndirection;  ; Offset: 5312
;       uint PrePadding_View_5316;                    ; Offset: 5316
;       uint BindlessResource_View_WaterData;         ; Offset: 5320
;       uint PrePadding_View_5324;                    ; Offset: 5324
;       float4 View_RectLightAtlasSizeAndInvSize;     ; Offset: 5328
;       float View_RectLightAtlasMaxMipLevel;         ; Offset: 5344
;       float PrePadding_View_5348;                   ; Offset: 5348
;       uint BindlessResource_View_RectLightAtlasTexture;; Offset: 5352
;       uint PrePadding_View_5356;                    ; Offset: 5356
;       uint BindlessSampler_View_RectLightAtlasSampler;; Offset: 5360
;       uint PrePadding_View_5364;                    ; Offset: 5364
;       uint PrePadding_View_5368;                    ; Offset: 5368
;       uint PrePadding_View_5372;                    ; Offset: 5372
;       float4 View_IESAtlasSizeAndInvSize;           ; Offset: 5376
;       uint BindlessResource_View_IESAtlasTexture;   ; Offset: 5392
;       uint PrePadding_View_5396;                    ; Offset: 5396
;       uint BindlessSampler_View_IESAtlasSampler;    ; Offset: 5400
;       uint PrePadding_View_5404;                    ; Offset: 5404
;       uint BindlessSampler_View_LandscapeWeightmapSampler;; Offset: 5408
;       uint PrePadding_View_5412;                    ; Offset: 5412
;       uint BindlessResource_View_LandscapeIndirection;; Offset: 5416
;       uint PrePadding_View_5420;                    ; Offset: 5420
;       uint BindlessResource_View_LandscapePerComponentData;; Offset: 5424
;       uint PrePadding_View_5428;                    ; Offset: 5428
;       uint BindlessResource_View_VTFeedbackBuffer;  ; Offset: 5432
;       uint PrePadding_View_5436;                    ; Offset: 5436
;       uint BindlessResource_View_PhysicsFieldClipmapBuffer;; Offset: 5440
;       uint PrePadding_View_5444;                    ; Offset: 5444
;       uint PrePadding_View_5448;                    ; Offset: 5448
;       uint PrePadding_View_5452;                    ; Offset: 5452
;       float3 View_TLASRelativePreViewTranslation;   ; Offset: 5456
;       float PrePadding_View_5468;                   ; Offset: 5468
;       float3 View_TLASViewTilePosition;             ; Offset: 5472
;   
;   } UniformBufferConstants_View;                    ; Offset:    0 Size:  5484
;
; }
;
; cbuffer UniformBufferConstants_ReflectionStruct
; {
;
;   struct UniformBufferConstants_ReflectionStruct
;   {
;
;       float4 ReflectionStruct_SkyLightParameters;   ; Offset:    0
;       uint BindlessResource_ReflectionStruct_SkyLightCubemap;; Offset:   16
;       uint PrePadding_ReflectionStruct_20;          ; Offset:   20
;       uint BindlessSampler_ReflectionStruct_SkyLightCubemapSampler;; Offset:   24
;       uint PrePadding_ReflectionStruct_28;          ; Offset:   28
;       uint BindlessResource_ReflectionStruct_SkyLightBlendDestinationCubemap;; Offset:   32
;       uint PrePadding_ReflectionStruct_36;          ; Offset:   36
;       uint BindlessSampler_ReflectionStruct_SkyLightBlendDestinationCubemapSampler;; Offset:   40
;       uint PrePadding_ReflectionStruct_44;          ; Offset:   44
;       uint BindlessResource_ReflectionStruct_ReflectionCubemap;; Offset:   48
;       uint PrePadding_ReflectionStruct_52;          ; Offset:   52
;       uint BindlessSampler_ReflectionStruct_ReflectionCubemapSampler;; Offset:   56
;       uint PrePadding_ReflectionStruct_60;          ; Offset:   60
;       uint BindlessResource_ReflectionStruct_PreIntegratedGF;; Offset:   64
;       uint PrePadding_ReflectionStruct_68;          ; Offset:   68
;       uint BindlessSampler_ReflectionStruct_PreIntegratedGFSampler;; Offset:   72
;   
;   } UniformBufferConstants_ReflectionStruct;        ; Offset:    0 Size:    76
;
; }
;
; cbuffer UniformBufferConstants_FogStruct
; {
;
;   struct UniformBufferConstants_FogStruct
;   {
;
;       float4 FogStruct_ExponentialFogParameters;    ; Offset:    0
;       float4 FogStruct_ExponentialFogParameters2;   ; Offset:   16
;       float4 FogStruct_ExponentialFogColorParameter;; Offset:   32
;       float4 FogStruct_ExponentialFogParameters3;   ; Offset:   48
;       float4 FogStruct_SkyAtmosphereAmbientContributionColorScale;; Offset:   64
;       float4 FogStruct_InscatteringLightDirection;  ; Offset:   80
;       float4 FogStruct_DirectionalInscatteringColor;; Offset:   96
;       float2 FogStruct_SinCosInscatteringColorCubemapRotation;; Offset:  112
;       float PrePadding_FogStruct_120;               ; Offset:  120
;       float PrePadding_FogStruct_124;               ; Offset:  124
;       float3 FogStruct_FogInscatteringTextureParameters;; Offset:  128
;       float FogStruct_ApplyVolumetricFog;           ; Offset:  140
;       float FogStruct_VolumetricFogStartDistance;   ; Offset:  144
;       float FogStruct_VolumetricFogNearFadeInDistanceInv;; Offset:  148
;       uint BindlessResource_FogStruct_FogInscatteringColorCubemap;; Offset:  152
;       uint PrePadding_FogStruct_156;                ; Offset:  156
;       uint BindlessSampler_FogStruct_FogInscatteringColorSampler;; Offset:  160
;       uint PrePadding_FogStruct_164;                ; Offset:  164
;       uint BindlessResource_FogStruct_IntegratedLightScattering;; Offset:  168
;       uint PrePadding_FogStruct_172;                ; Offset:  172
;       uint BindlessSampler_FogStruct_IntegratedLightScatteringSampler;; Offset:  176
;   
;   } UniformBufferConstants_FogStruct;               ; Offset:    0 Size:   180
;
; }
;
; cbuffer UniformBufferConstants_VirtualVoxel
; {
;
;   struct UniformBufferConstants_VirtualVoxel
;   {
;
;       int3 VirtualVoxel_PageCountResolution;        ; Offset:    0
;       float VirtualVoxel_CPUMinVoxelWorldSize;      ; Offset:   12
;       int3 VirtualVoxel_PageTextureResolution;      ; Offset:   16
;       uint VirtualVoxel_PageCount;                  ; Offset:   28
;       uint VirtualVoxel_PageResolution;             ; Offset:   32
;       uint VirtualVoxel_PageResolutionLog2;         ; Offset:   36
;       uint VirtualVoxel_PageIndexCount;             ; Offset:   40
;       uint VirtualVoxel_IndirectDispatchGroupSize;  ; Offset:   44
;       uint VirtualVoxel_NodeDescCount;              ; Offset:   48
;       uint VirtualVoxel_JitterMode;                 ; Offset:   52
;       float VirtualVoxel_DensityScale;              ; Offset:   56
;       float VirtualVoxel_DensityScale_AO;           ; Offset:   60
;       float VirtualVoxel_DensityScale_Shadow;       ; Offset:   64
;       float VirtualVoxel_DensityScale_Transmittance;; Offset:   68
;       float VirtualVoxel_DensityScale_Environment;  ; Offset:   72
;       float VirtualVoxel_DensityScale_Raytracing;   ; Offset:   76
;       float VirtualVoxel_DepthBiasScale_Shadow;     ; Offset:   80
;       float VirtualVoxel_DepthBiasScale_Transmittance;; Offset:   84
;       float VirtualVoxel_DepthBiasScale_Environment;; Offset:   88
;       float VirtualVoxel_SteppingScale_Shadow;      ; Offset:   92
;       float VirtualVoxel_SteppingScale_Transmittance;; Offset:   96
;       float VirtualVoxel_SteppingScale_Environment; ; Offset:  100
;       float VirtualVoxel_SteppingScale_Raytracing;  ; Offset:  104
;       float VirtualVoxel_HairCoveragePixelRadiusAtDepth1;; Offset:  108
;       float VirtualVoxel_Raytracing_ShadowOcclusionThreshold;; Offset:  112
;       float VirtualVoxel_Raytracing_SkyOcclusionThreshold;; Offset:  116
;       float PrePadding_VirtualVoxel_120;            ; Offset:  120
;       float PrePadding_VirtualVoxel_124;            ; Offset:  124
;       float3 VirtualVoxel_TranslatedWorldOffset;    ; Offset:  128
;       float PrePadding_VirtualVoxel_140;            ; Offset:  140
;       float3 VirtualVoxel_TranslatedWorldOffsetStereoCorrection;; Offset:  144
;       uint VirtualVoxel_AllocationFeedbackEnable;   ; Offset:  156
;       uint BindlessResource_VirtualVoxel_AllocatedPageCountBuffer;; Offset:  160
;       uint PrePadding_VirtualVoxel_164;             ; Offset:  164
;       uint BindlessResource_VirtualVoxel_PageIndexBuffer;; Offset:  168
;       uint PrePadding_VirtualVoxel_172;             ; Offset:  172
;       uint BindlessResource_VirtualVoxel_PageIndexOccupancyBuffer;; Offset:  176
;       uint PrePadding_VirtualVoxel_180;             ; Offset:  180
;       uint BindlessResource_VirtualVoxel_PageIndexCoordBuffer;; Offset:  184
;       uint PrePadding_VirtualVoxel_188;             ; Offset:  188
;       uint BindlessResource_VirtualVoxel_NodeDescBuffer;; Offset:  192
;       uint PrePadding_VirtualVoxel_196;             ; Offset:  196
;       uint BindlessResource_VirtualVoxel_CurrGPUMinVoxelSize;; Offset:  200
;       uint PrePadding_VirtualVoxel_204;             ; Offset:  204
;       uint BindlessResource_VirtualVoxel_NextGPUMinVoxelSize;; Offset:  208
;       float PrePadding_VirtualVoxel_212;            ; Offset:  212
;       float PrePadding_VirtualVoxel_216;            ; Offset:  216
;       float PrePadding_VirtualVoxel_220;            ; Offset:  220
;       uint BindlessResource_VirtualVoxel_PageTexture;; Offset:  224
;   
;   } UniformBufferConstants_VirtualVoxel;            ; Offset:    0 Size:   228
;
; }
;
; Resource bind info for VirtualVoxel_NodeDescBuffer
; {
;
;   struct struct.FPackedVirtualVoxelNodeDesc
;   {
;
;       float3 TranslatedWorldMinAABB;                ; Offset:    0
;       uint PackedPageIndexResolution;               ; Offset:   12
;       float3 TranslatedWorldMaxAABB;                ; Offset:   16
;       uint PageIndexOffset_VoxelWorldSize;          ; Offset:   28
;   
;   } $Element;                                       ; Offset:    0 Size:    32
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; _RootShaderParameters             cbuffer      NA          NA     CB0            cb0     1
; UniformBufferConstants_View       cbuffer      NA          NA     CB1            cb1     1
; UniformBufferConstants_ReflectionStruct   cbuffer      NA          NA     CB2            cb2     1
; UniformBufferConstants_FogStruct   cbuffer      NA          NA     CB3            cb3     1
; UniformBufferConstants_VirtualVoxel   cbuffer      NA          NA     CB4            cb4     1
; View_DistantSkyLightLutTextureSampler   sampler      NA          NA      S0             s0     1
; ReflectionStruct_SkyLightCubemapSampler   sampler      NA          NA      S1             s1     1
; FogStruct_FogInscatteringColorSampler   sampler      NA          NA      S2             s2     1
; View_DistantSkyLightLutTexture    texture     f32          2d      T0             t0     1
; ReflectionStruct_SkyLightCubemap   texture     f32        cube      T1             t1     1
; FogStruct_FogInscatteringColorCubemap   texture     f32        cube      T2             t2     1
; VirtualVoxel_PageIndexBuffer      texture     u32         buf      T3             t3     1
; VirtualVoxel_NodeDescBuffer       texture  struct         r/o      T4             t4     1
; VirtualVoxel_PageTexture          texture     u32          3d      T5             t5     1
; DownsampledDepth                  texture     f32          2d      T6             t6     1
; RayBuffer                         texture     f32          2d      T7             t7     1
; RayTraceDistance                  texture     u32          2d      T8             t8     1
; CompactedTraceTexelAllocator      texture     u32         buf      T9             t9     1
; CompactedTraceTexelData           texture     u32         buf     T10            t10     1
; RWTraceHit                            UAV     f32          2d      U0             u0     1
; RWTraceRadiance                       UAV     f32          2d      U1             u1     1
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.ResBind = type { i32, i32, i32, i8 }
%dx.types.ResourceProperties = type { i32, i32 }
%dx.types.ResRet.i32 = type { i32, i32, i32, i32, i32 }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%"class.Texture2D<vector<float, 4> >" = type { <4 x float>, %"class.Texture2D<vector<float, 4> >::mips_type" }
%"class.Texture2D<vector<float, 4> >::mips_type" = type { i32 }
%"class.TextureCube<vector<float, 4> >" = type { <4 x float> }
%"class.Buffer<unsigned int>" = type { i32 }
%"class.StructuredBuffer<FPackedVirtualVoxelNodeDesc>" = type { %struct.FPackedVirtualVoxelNodeDesc }
%struct.FPackedVirtualVoxelNodeDesc = type { <3 x float>, i32, <3 x float>, i32 }
%"class.Texture3D<unsigned int>" = type { i32, %"class.Texture3D<unsigned int>::mips_type" }
%"class.Texture3D<unsigned int>::mips_type" = type { i32 }
%"class.Texture2D<unsigned int>" = type { i32, %"class.Texture2D<unsigned int>::mips_type" }
%"class.Texture2D<unsigned int>::mips_type" = type { i32 }
%"class.RWTexture2D<float>" = type { float }
%"class.RWTexture2D<vector<float, 3> >" = type { <3 x float> }
%_RootShaderParameters = type { float, float, float, float, i32, i32, i32, <2 x i32>, float, i32, i32, i32, <3 x float>, <3 x float>, <3 x i32>, <3 x i32>, <3 x i32>, <3 x float>, <3 x float>, <3 x float>, <3 x float>, float, float, float, i32, <3 x float>, <3 x i32>, i32, <2 x i32>, <2 x i32>, float, float, i32, i32, i32, float, float, float, float, float, i32 }
%hostlayout.UniformBufferConstants_View = type { [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <4 x float>, <4 x float>, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <4 x float>, <4 x float>, <2 x float>, <2 x float>, <4 x float>, <4 x float>, <4 x i32>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <2 x float>, <2 x float>, i32, float, float, float, <4 x float>, <4 x float>, <4 x float>, <2 x float>, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, i32, i32, float, float, float, <4 x float>, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <4 x float>, float, float, float, float, float, float, float, float, float, float, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <3 x float>, float, <4 x float>, [4 x <4 x float>], <4 x float>, float, float, float, float, <4 x float>, float, float, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, <4 x float>, float, float, float, float, <4 x float>, [8 x <4 x float>], float, float, float, float, i32, float, float, float, <3 x float>, i32, [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], float, float, i32, i32, <3 x float>, float, <3 x float>, float, float, float, i32, float, float, float, float, float, <2 x i32>, float, float, <3 x float>, float, <3 x float>, float, <2 x float>, <2 x float>, <2 x float>, <2 x float>, <2 x float>, <2 x float>, float, float, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, float, float, float, float, [2 x <4 x float>], float, i32, i32, i32, i32, i32, i32, i32, <4 x float>, <2 x float>, float, float, <4 x float>, float, i32, float, float, <4 x float>, i32, i32, i32, float, <4 x float>, <4 x float>, <4 x float>, <3 x float>, float, i32, i32, i32, i32, [32 x <4 x i32>], i32, float, float, float, <4 x float>, <4 x float>, <4 x float>, <4 x float>, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <4 x float>, float, float, i32, i32, i32, i32, i32, i32, <4 x float>, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <3 x float>, float, <3 x float> }
%UniformBufferConstants_ReflectionStruct = type { <4 x float>, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%UniformBufferConstants_FogStruct = type { <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <2 x float>, float, float, <3 x float>, float, float, float, i32, i32, i32, i32, i32, i32, i32 }
%UniformBufferConstants_VirtualVoxel = type { <3 x i32>, float, <3 x i32>, i32, i32, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, <3 x float>, float, <3 x float>, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, i32 }
%struct.SamplerState = type { i32 }

define void @ReflectionTraceMeshSDFsCS() {
  %1 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 1 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 1 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 10, i32 10, i32 0, i8 0 }, i32 10, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %4 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 9, i32 9, i32 0, i8 0 }, i32 9, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %5 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 8, i32 8, i32 0, i8 0 }, i32 8, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %6 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 7, i32 7, i32 0, i8 0 }, i32 7, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %7 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 6, i32 6, i32 0, i8 0 }, i32 6, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %8 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 5, i32 5, i32 0, i8 0 }, i32 5, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %9 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 4, i32 4, i32 0, i8 0 }, i32 4, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %10 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 3, i32 3, i32 0, i8 0 }, i32 3, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %11 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 2, i32 2, i32 0, i8 0 }, i32 2, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %12 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 0 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %13 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind zeroinitializer, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %14 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 2, i32 2, i32 0, i8 3 }, i32 2, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %15 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 3 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %16 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 3 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %17 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 4, i32 4, i32 0, i8 2 }, i32 4, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %18 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 3, i32 3, i32 0, i8 2 }, i32 3, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %19 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 2, i32 2, i32 0, i8 2 }, i32 2, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %20 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 2 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %21 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 2 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %22 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %17, %dx.types.ResourceProperties { i32 13, i32 228 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %23 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %18, %dx.types.ResourceProperties { i32 13, i32 180 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %24 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %19, %dx.types.ResourceProperties { i32 13, i32 76 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %25 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %20, %dx.types.ResourceProperties { i32 13, i32 5484 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %26 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %21, %dx.types.ResourceProperties { i32 13, i32 900 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %27 = call i32 @dx.op.threadId.i32(i32 93, i32 0)  ; ThreadId(component)
  %28 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %4, %dx.types.ResourceProperties { i32 10, i32 261 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<U32>
  %29 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %28, i32 0, i32 undef)  ; BufferLoad(srv,index,wot)
  %30 = extractvalue %dx.types.ResRet.i32 %29, 0
  %31 = icmp ult i32 %27, %30
  br i1 %31, label %32, label %897

; <label>:32                                      ; preds = %0
  %33 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %3, %dx.types.ResourceProperties { i32 10, i32 261 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<U32>
  %34 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %33, i32 %27, i32 undef)  ; BufferLoad(srv,index,wot)
  %35 = extractvalue %dx.types.ResRet.i32 %34, 0
  %36 = and i32 %35, 65535
  %37 = lshr i32 %35, 16
  %38 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %26, i32 40)  ; CBufferLoadLegacy(handle,regIndex)
  %39 = extractvalue %dx.types.CBufRet.i32 %38, 0
  %40 = mul i32 %36, %39
  %41 = mul i32 %37, %39
  %42 = uitofp i32 %40 to float
  %43 = uitofp i32 %41 to float
  %44 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 124)  ; CBufferLoadLegacy(handle,regIndex)
  %45 = extractvalue %dx.types.CBufRet.f32 %44, 0
  %46 = extractvalue %dx.types.CBufRet.f32 %44, 1
  %47 = fadd fast float %45, 5.000000e-01
  %48 = fadd fast float %47, %42
  %49 = fadd fast float %46, 5.000000e-01
  %50 = fadd fast float %49, %43
  %51 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 125)  ; CBufferLoadLegacy(handle,regIndex)
  %52 = extractvalue %dx.types.CBufRet.f32 %51, 0
  %53 = extractvalue %dx.types.CBufRet.f32 %51, 1
  %54 = fadd fast float %45, -1.000000e+00
  %55 = fadd fast float %54, %52
  %56 = fadd fast float %46, -1.000000e+00
  %57 = fadd fast float %56, %53
  %58 = call float @dx.op.binary.f32(i32 36, float %48, float %55)  ; FMin(a,b)
  %59 = call float @dx.op.binary.f32(i32 36, float %50, float %57)  ; FMin(a,b)
  %60 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 128)  ; CBufferLoadLegacy(handle,regIndex)
  %61 = extractvalue %dx.types.CBufRet.f32 %60, 2
  %62 = extractvalue %dx.types.CBufRet.f32 %60, 3
  %63 = fmul fast float %61, %58
  %64 = fmul fast float %62, %59
  %65 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %7, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %66 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %65, i32 0, i32 %36, i32 %37, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %67 = extractvalue %dx.types.ResRet.f32 %66, 0
  %68 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 68)  ; CBufferLoadLegacy(handle,regIndex)
  %69 = extractvalue %dx.types.CBufRet.f32 %68, 2
  %70 = extractvalue %dx.types.CBufRet.f32 %68, 3
  %71 = fsub fast float %63, %70
  %72 = fsub fast float %64, %69
  %73 = extractvalue %dx.types.CBufRet.f32 %68, 0
  %74 = extractvalue %dx.types.CBufRet.f32 %68, 1
  %75 = fdiv fast float %71, %73
  %76 = fdiv fast float %72, %74
  %77 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 48)  ; CBufferLoadLegacy(handle,regIndex)
  %78 = extractvalue %dx.types.CBufRet.f32 %77, 0
  %79 = extractvalue %dx.types.CBufRet.f32 %77, 1
  %80 = extractvalue %dx.types.CBufRet.f32 %77, 2
  %81 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 49)  ; CBufferLoadLegacy(handle,regIndex)
  %82 = extractvalue %dx.types.CBufRet.f32 %81, 0
  %83 = extractvalue %dx.types.CBufRet.f32 %81, 1
  %84 = extractvalue %dx.types.CBufRet.f32 %81, 2
  %85 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 50)  ; CBufferLoadLegacy(handle,regIndex)
  %86 = extractvalue %dx.types.CBufRet.f32 %85, 0
  %87 = extractvalue %dx.types.CBufRet.f32 %85, 1
  %88 = extractvalue %dx.types.CBufRet.f32 %85, 2
  %89 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 51)  ; CBufferLoadLegacy(handle,regIndex)
  %90 = extractvalue %dx.types.CBufRet.f32 %89, 0
  %91 = extractvalue %dx.types.CBufRet.f32 %89, 1
  %92 = extractvalue %dx.types.CBufRet.f32 %89, 2
  %93 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 61)  ; CBufferLoadLegacy(handle,regIndex)
  %94 = extractvalue %dx.types.CBufRet.f32 %93, 0
  %95 = extractvalue %dx.types.CBufRet.f32 %93, 1
  %96 = extractvalue %dx.types.CBufRet.f32 %93, 2
  %97 = fmul fast float %75, %67
  %98 = fmul fast float %76, %67
  %99 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 31)  ; CBufferLoadLegacy(handle,regIndex)
  %100 = extractvalue %dx.types.CBufRet.f32 %99, 3
  %101 = bitcast float %100 to i32
  %102 = icmp ne i32 %101, 0
  %103 = select i1 %102, float %75, float %97
  %104 = select i1 %102, float %76, float %98
  %105 = fmul fast float %103, %78
  %106 = call float @dx.op.tertiary.f32(i32 46, float %104, float %82, float %105)  ; FMad(a,b,c)
  %107 = call float @dx.op.tertiary.f32(i32 46, float %67, float %86, float %106)  ; FMad(a,b,c)
  %108 = fmul fast float %103, %79
  %109 = call float @dx.op.tertiary.f32(i32 46, float %104, float %83, float %108)  ; FMad(a,b,c)
  %110 = call float @dx.op.tertiary.f32(i32 46, float %67, float %87, float %109)  ; FMad(a,b,c)
  %111 = fmul fast float %103, %80
  %112 = call float @dx.op.tertiary.f32(i32 46, float %104, float %84, float %111)  ; FMad(a,b,c)
  %113 = call float @dx.op.tertiary.f32(i32 46, float %67, float %88, float %112)  ; FMad(a,b,c)
  %114 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 52)  ; CBufferLoadLegacy(handle,regIndex)
  %115 = extractvalue %dx.types.CBufRet.f32 %114, 0
  %116 = extractvalue %dx.types.CBufRet.f32 %114, 1
  %117 = extractvalue %dx.types.CBufRet.f32 %114, 2
  %118 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 53)  ; CBufferLoadLegacy(handle,regIndex)
  %119 = extractvalue %dx.types.CBufRet.f32 %118, 0
  %120 = extractvalue %dx.types.CBufRet.f32 %118, 1
  %121 = extractvalue %dx.types.CBufRet.f32 %118, 2
  %122 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 54)  ; CBufferLoadLegacy(handle,regIndex)
  %123 = extractvalue %dx.types.CBufRet.f32 %122, 0
  %124 = extractvalue %dx.types.CBufRet.f32 %122, 1
  %125 = extractvalue %dx.types.CBufRet.f32 %122, 2
  %126 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 55)  ; CBufferLoadLegacy(handle,regIndex)
  %127 = extractvalue %dx.types.CBufRet.f32 %126, 0
  %128 = extractvalue %dx.types.CBufRet.f32 %126, 1
  %129 = extractvalue %dx.types.CBufRet.f32 %126, 2
  %130 = fmul fast float %103, %115
  %131 = call float @dx.op.tertiary.f32(i32 46, float %104, float %119, float %130)  ; FMad(a,b,c)
  %132 = call float @dx.op.tertiary.f32(i32 46, float %67, float %123, float %131)  ; FMad(a,b,c)
  %133 = fadd fast float %132, %127
  %134 = fmul fast float %103, %116
  %135 = call float @dx.op.tertiary.f32(i32 46, float %104, float %120, float %134)  ; FMad(a,b,c)
  %136 = call float @dx.op.tertiary.f32(i32 46, float %67, float %124, float %135)  ; FMad(a,b,c)
  %137 = fadd fast float %136, %128
  %138 = fmul fast float %103, %117
  %139 = call float @dx.op.tertiary.f32(i32 46, float %104, float %121, float %138)  ; FMad(a,b,c)
  %140 = call float @dx.op.tertiary.f32(i32 46, float %67, float %125, float %139)  ; FMad(a,b,c)
  %141 = fadd fast float %140, %129
  %142 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %6, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %143 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %142, i32 0, i32 %36, i32 %37, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %144 = extractvalue %dx.types.ResRet.f32 %143, 0
  %145 = extractvalue %dx.types.ResRet.f32 %143, 1
  %146 = extractvalue %dx.types.ResRet.f32 %143, 2
  %147 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %5, %dx.types.ResourceProperties { i32 2, i32 261 })  ; AnnotateHandle(res,props)  resource: Texture2D<U32>
  %148 = call %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32 66, %dx.types.Handle %147, i32 0, i32 %36, i32 %37, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %149 = extractvalue %dx.types.ResRet.i32 %148, 0
  %150 = and i32 %149, 32767
  %151 = call float @dx.op.legacyF16ToF32(i32 131, i32 %150)  ; LegacyF16ToF32(value)
  %152 = call float @dx.op.binary.f32(i32 36, float %151, float %151)  ; FMin(a,b)
  %153 = fmul fast float %152, %144
  %154 = fmul fast float %152, %145
  %155 = fmul fast float %152, %146
  %156 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %22, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %157 = extractvalue %dx.types.CBufRet.i32 %156, 1
  %158 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %25, i32 141)  ; CBufferLoadLegacy(handle,regIndex)
  %159 = extractvalue %dx.types.CBufRet.i32 %158, 1
  %160 = icmp ugt i32 %157, 1
  %161 = select i1 %160, i32 0, i32 %159
  %162 = mul i32 %36, 1664525
  %163 = mul i32 %37, 1664525
  %164 = mul i32 %161, 1664525
  %165 = add i32 %162, 1013904223
  %166 = add i32 %163, 1013904223
  %167 = add i32 %164, 1013904223
  %168 = mul i32 %167, %166
  %169 = add i32 %165, %168
  %170 = mul i32 %169, %167
  %171 = add i32 %170, %166
  %172 = mul i32 %171, %169
  %173 = add i32 %172, %167
  %174 = mul i32 %173, %171
  %175 = add i32 %174, %169
  %176 = add i32 %162, 1042201148
  %177 = add i32 %163, 1042201148
  %178 = mul i32 %167, %177
  %179 = add i32 %176, %178
  %180 = mul i32 %179, %167
  %181 = add i32 %180, %177
  %182 = icmp eq i32 %157, 0
  br i1 %182, label %210, label %183

; <label>:183                                     ; preds = %32
  %184 = mul i32 %181, %179
  %185 = add i32 %184, %167
  %186 = mul i32 %185, %181
  %187 = add i32 %186, %179
  %188 = lshr i32 %187, 16
  %189 = mul i32 %175, %173
  %190 = add i32 %189, %171
  %191 = lshr i32 %175, 16
  %192 = uitofp i32 %161 to float
  %193 = fmul fast float %192, 1.250000e-01
  %194 = uitofp i32 %191 to float
  %195 = fmul fast float %194, 0x3EF0000000000000
  %196 = fadd fast float %195, %193
  %197 = call float @dx.op.unary.f32(i32 22, float %196)  ; Frc(value)
  %198 = call i32 @dx.op.unary.i32(i32 30, i32 %161)  ; Bfrev(value)
  %199 = xor i32 %198, %190
  %200 = lshr i32 %199, 16
  %201 = uitofp i32 %200 to float
  %202 = fmul fast float %201, 0x3EF0000000000000
  %203 = uitofp i32 %188 to float
  %204 = fmul fast float %203, 0x3EF0000000000000
  %205 = fadd fast float %204, %193
  %206 = call float @dx.op.unary.f32(i32 22, float %205)  ; Frc(value)
  %207 = fadd float %197, -5.000000e-01
  %208 = fadd float %202, -5.000000e-01
  %209 = fadd float %206, -5.000000e-01
  br label %210

; <label>:210                                     ; preds = %183, %32
  %211 = phi float [ %207, %183 ], [ -5.000000e-01, %32 ]
  %212 = phi float [ %208, %183 ], [ -5.000000e-01, %32 ]
  %213 = phi float [ %209, %183 ], [ -5.000000e-01, %32 ]
  %214 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %22, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %215 = extractvalue %dx.types.CBufRet.f32 %214, 0
  %216 = fmul fast float %215, %144
  %217 = fmul fast float %215, %145
  %218 = fmul fast float %215, %146
  %219 = fadd fast float %211, %216
  %220 = fadd fast float %212, %217
  %221 = fadd fast float %213, %218
  %222 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %22, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %223 = extractvalue %dx.types.CBufRet.i32 %222, 0
  %224 = extractvalue %dx.types.CBufRet.i32 %222, 1
  %225 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %22, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %226 = extractvalue %dx.types.CBufRet.i32 %225, 0
  %227 = extractvalue %dx.types.CBufRet.i32 %225, 1
  %228 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %22, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %229 = extractvalue %dx.types.CBufRet.f32 %228, 0
  %230 = extractvalue %dx.types.CBufRet.f32 %214, 3
  %231 = extractvalue %dx.types.CBufRet.i32 %156, 0
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %497, label %233

; <label>:233                                     ; preds = %210
  br label %234

; <label>:234                                     ; preds = %488, %233
  %235 = phi i32 [ %492, %488 ], [ 0, %233 ]
  %236 = phi i32 [ %491, %488 ], [ 0, %233 ]
  %237 = phi float [ %490, %488 ], [ %152, %233 ]
  %238 = phi float [ %489, %488 ], [ 1.000000e+00, %233 ]
  %239 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %9, %dx.types.ResourceProperties { i32 524, i32 32 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=32>
  %240 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %239, i32 %235, i32 0, i8 7, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %241 = extractvalue %dx.types.ResRet.f32 %240, 0
  %242 = extractvalue %dx.types.ResRet.f32 %240, 1
  %243 = extractvalue %dx.types.ResRet.f32 %240, 2
  %244 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %239, i32 %235, i32 12, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %245 = extractvalue %dx.types.ResRet.i32 %244, 0
  %246 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %239, i32 %235, i32 16, i8 7, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %247 = extractvalue %dx.types.ResRet.f32 %246, 0
  %248 = extractvalue %dx.types.ResRet.f32 %246, 1
  %249 = extractvalue %dx.types.ResRet.f32 %246, 2
  %250 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %239, i32 %235, i32 28, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %251 = extractvalue %dx.types.ResRet.i32 %250, 0
  %252 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %22, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %253 = extractvalue %dx.types.CBufRet.i32 %252, 0
  %254 = and i32 %245, 255
  %255 = lshr i32 %245, 8
  %256 = and i32 %255, 255
  %257 = lshr i32 %245, 16
  %258 = and i32 %257, 255
  %259 = mul i32 %253, %254
  %260 = mul i32 %253, %256
  %261 = mul i32 %253, %258
  %262 = and i32 %251, 4194303
  %263 = lshr i32 %251, 22
  %264 = uitofp i32 %263 to float
  %265 = fmul fast float %264, 0x3F84050140000000
  %266 = icmp ne i32 %254, 0
  %267 = icmp ne i32 %256, 0
  %268 = icmp ne i32 %258, 0
  %269 = and i1 %266, %267
  %270 = and i1 %268, %269
  %271 = fmul fast float %265, %219
  %272 = fmul fast float %265, %220
  %273 = fmul fast float %265, %221
  %274 = fadd fast float %133, %271
  %275 = fadd fast float %137, %272
  %276 = fadd fast float %141, %273
  %277 = fdiv fast float 0x4059933340000000, %264
  br i1 %270, label %278, label %479

; <label>:278                                     ; preds = %234
  %279 = fsub fast float %153, %271
  %280 = fsub fast float %154, %272
  %281 = fsub fast float %155, %273
  %282 = fdiv fast float 1.000000e+00, %279
  %283 = fdiv fast float 1.000000e+00, %280
  %284 = fdiv fast float 1.000000e+00, %281
  %285 = fsub fast float %241, %274
  %286 = fsub fast float %242, %275
  %287 = fsub fast float %243, %276
  %288 = fmul fast float %282, %285
  %289 = fmul fast float %283, %286
  %290 = fmul fast float %284, %287
  %291 = fsub fast float %247, %274
  %292 = fsub fast float %248, %275
  %293 = fsub fast float %249, %276
  %294 = fmul fast float %282, %291
  %295 = fmul fast float %283, %292
  %296 = fmul fast float %284, %293
  %297 = call float @dx.op.binary.f32(i32 36, float %288, float %294)  ; FMin(a,b)
  %298 = call float @dx.op.binary.f32(i32 36, float %289, float %295)  ; FMin(a,b)
  %299 = call float @dx.op.binary.f32(i32 36, float %290, float %296)  ; FMin(a,b)
  %300 = call float @dx.op.binary.f32(i32 35, float %288, float %294)  ; FMax(a,b)
  %301 = call float @dx.op.binary.f32(i32 35, float %289, float %295)  ; FMax(a,b)
  %302 = call float @dx.op.binary.f32(i32 35, float %290, float %296)  ; FMax(a,b)
  %303 = call float @dx.op.binary.f32(i32 35, float %298, float %299)  ; FMax(a,b)
  %304 = call float @dx.op.binary.f32(i32 35, float %297, float %303)  ; FMax(a,b)
  %305 = call float @dx.op.binary.f32(i32 36, float %301, float %302)  ; FMin(a,b)
  %306 = call float @dx.op.binary.f32(i32 36, float %300, float %305)  ; FMin(a,b)
  %307 = call float @dx.op.unary.f32(i32 7, float %304)  ; Saturate(value)
  %308 = call float @dx.op.unary.f32(i32 7, float %306)  ; Saturate(value)
  %309 = fcmp fast olt float %307, %308
  br i1 %309, label %310, label %479

; <label>:310                                     ; preds = %278
  %311 = fmul fast float %307, %279
  %312 = fmul fast float %307, %280
  %313 = fmul fast float %307, %281
  %314 = fadd fast float %311, %274
  %315 = fadd fast float %312, %275
  %316 = fadd fast float %313, %276
  %317 = fsub fast float %308, %307
  %318 = fmul fast float %279, %317
  %319 = fsub fast float %308, %307
  %320 = fmul fast float %280, %319
  %321 = fsub fast float %308, %307
  %322 = fmul fast float %281, %321
  %323 = fmul fast float %318, %318
  %324 = fmul fast float %320, %320
  %325 = fadd fast float %323, %324
  %326 = fmul fast float %322, %322
  %327 = fadd fast float %325, %326
  %328 = call float @dx.op.unary.f32(i32 24, float %327)  ; Sqrt(value)
  %329 = call float @dx.op.binary.f32(i32 36, float %328, float %152)  ; FMin(a,b)
  %330 = call float @dx.op.dot3.f32(i32 55, float %318, float %320, float %322, float %318, float %320, float %322)  ; Dot3(ax,ay,az,bx,by,bz)
  %331 = call float @dx.op.unary.f32(i32 25, float %330)  ; Rsqrt(value)
  %332 = fdiv fast float %329, %265
  %333 = call float @dx.op.unary.f32(i32 28, float %332)  ; Round_pi(value)
  %334 = call float @dx.op.binary.f32(i32 36, float %333, float 1.024000e+03)  ; FMin(a,b)
  %335 = fdiv fast float %329, %334
  %336 = fcmp fast ogt float %334, 0.000000e+00
  br i1 %336, label %337, label %479

; <label>:337                                     ; preds = %310
  br label %338

; <label>:338                                     ; preds = %471, %337
  %339 = phi i32 [ %422, %471 ], [ 9999, %337 ]
  %340 = phi i32 [ %423, %471 ], [ 9999, %337 ]
  %341 = phi i32 [ %424, %471 ], [ 9999, %337 ]
  %342 = phi i32 [ %425, %471 ], [ 0, %337 ]
  %343 = phi i32 [ %426, %471 ], [ 0, %337 ]
  %344 = phi i32 [ %427, %471 ], [ 0, %337 ]
  %345 = phi i32 [ %428, %471 ], [ 0, %337 ]
  %346 = phi float [ %475, %471 ], [ 1.000000e+00, %337 ]
  %347 = phi float [ %476, %471 ], [ 0.000000e+00, %337 ]
  %348 = phi float [ %472, %471 ], [ 0.000000e+00, %337 ]
  %349 = fmul fast float %346, %335
  %350 = call float @dx.op.binary.f32(i32 35, float %349, float 0.000000e+00)  ; FMax(a,b)
  %351 = fmul fast float %318, %265
  %352 = fmul fast float %351, %331
  %353 = fmul fast float %352, %347
  %354 = fmul fast float %320, %265
  %355 = fmul fast float %354, %331
  %356 = fmul fast float %355, %347
  %357 = fmul fast float %322, %265
  %358 = fmul fast float %357, %331
  %359 = fmul fast float %358, %347
  %360 = fadd fast float %314, %353
  %361 = fadd fast float %315, %356
  %362 = fadd fast float %316, %359
  %363 = fmul fast float %211, %350
  %364 = fmul fast float %212, %350
  %365 = fmul fast float %213, %350
  %366 = fadd fast float %360, %363
  %367 = fadd fast float %361, %364
  %368 = fadd fast float %362, %365
  %369 = add i32 %259, -1
  %370 = add i32 %260, -1
  %371 = add i32 %261, -1
  %372 = fsub fast float %366, %241
  %373 = fsub fast float %367, %242
  %374 = fsub fast float %368, %243
  %375 = fsub fast float %247, %241
  %376 = fsub fast float %248, %242
  %377 = fsub fast float %249, %243
  %378 = fdiv fast float %372, %375
  %379 = fdiv fast float %373, %376
  %380 = fdiv fast float %374, %377
  %381 = call float @dx.op.unary.f32(i32 7, float %378)  ; Saturate(value)
  %382 = call float @dx.op.unary.f32(i32 7, float %379)  ; Saturate(value)
  %383 = call float @dx.op.unary.f32(i32 7, float %380)  ; Saturate(value)
  %384 = uitofp i32 %259 to float
  %385 = uitofp i32 %260 to float
  %386 = uitofp i32 %261 to float
  %387 = fmul fast float %381, %384
  %388 = fmul fast float %382, %385
  %389 = fmul fast float %383, %386
  %390 = fptoui float %387 to i32
  %391 = fptoui float %388 to i32
  %392 = fptoui float %389 to i32
  %393 = call i32 @dx.op.binary.i32(i32 40, i32 %390, i32 %369)  ; UMin(a,b)
  %394 = call i32 @dx.op.binary.i32(i32 40, i32 %391, i32 %370)  ; UMin(a,b)
  %395 = call i32 @dx.op.binary.i32(i32 40, i32 %392, i32 %371)  ; UMin(a,b)
  %396 = and i32 %227, 31
  %397 = lshr i32 %393, %396
  %398 = lshr i32 %394, %396
  %399 = lshr i32 %395, %396
  %400 = icmp ne i32 %397, %339
  %401 = icmp ne i32 %398, %340
  %402 = icmp ne i32 %399, %341
  %403 = or i1 %400, %401
  %404 = or i1 %403, %402
  br i1 %404, label %405, label %421

; <label>:405                                     ; preds = %338
  %406 = mul i32 %399, %256
  %407 = add i32 %406, %398
  %408 = mul i32 %407, %254
  %409 = add i32 %397, %262
  %410 = add i32 %409, %408
  %411 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %10, %dx.types.ResourceProperties { i32 10, i32 261 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<U32>
  %412 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %411, i32 %410, i32 undef)  ; BufferLoad(srv,index,wot)
  %413 = extractvalue %dx.types.ResRet.i32 %412, 0
  %414 = icmp ne i32 %413, -1
  %415 = zext i1 %414 to i32
  %416 = mul i32 %223, %224
  %417 = urem i32 %413, %416
  %418 = urem i32 %417, %223
  %419 = udiv i32 %417, %223
  %420 = udiv i32 %413, %416
  br label %421

; <label>:421                                     ; preds = %405, %338
  %422 = phi i32 [ %397, %405 ], [ %339, %338 ]
  %423 = phi i32 [ %398, %405 ], [ %340, %338 ]
  %424 = phi i32 [ %399, %405 ], [ %341, %338 ]
  %425 = phi i32 [ %415, %405 ], [ %342, %338 ]
  %426 = phi i32 [ %418, %405 ], [ %343, %338 ]
  %427 = phi i32 [ %419, %405 ], [ %344, %338 ]
  %428 = phi i32 [ %420, %405 ], [ %345, %338 ]
  %429 = icmp eq i32 %425, 0
  br i1 %429, label %471, label %430

; <label>:430                                     ; preds = %421
  %431 = shl i32 %426, %396
  %432 = shl i32 %427, %396
  %433 = shl i32 %428, %396
  %434 = shl i32 %397, %396
  %435 = shl i32 %398, %396
  %436 = shl i32 %399, %396
  %437 = sub i32 %393, %434
  %438 = sub i32 %394, %435
  %439 = sub i32 %395, %436
  %440 = add i32 %437, %431
  %441 = add i32 %438, %432
  %442 = add i32 %439, %433
  %443 = fmul fast float %350, %277
  %444 = call float @dx.op.unary.f32(i32 23, float %443)  ; Log(value)
  %445 = fptoui float %444 to i32
  %446 = and i32 %445, 31
  %447 = lshr i32 %440, %446
  %448 = lshr i32 %441, %446
  %449 = lshr i32 %442, %446
  %450 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %8, %dx.types.ResourceProperties { i32 4, i32 261 })  ; AnnotateHandle(res,props)  resource: Texture3D<U32>
  %451 = call %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32 66, %dx.types.Handle %450, i32 %445, i32 %447, i32 %448, i32 %449, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %452 = extractvalue %dx.types.ResRet.i32 %451, 0
  %453 = and i32 %452, 16777215
  %454 = uitofp i32 %453 to float
  %455 = fmul fast float %229, 0x3F50624DE0000000
  %456 = fmul fast float %455, %277
  %457 = fmul fast float %456, %350
  %458 = fmul fast float %457, %454
  %459 = fadd fast float %458, %348
  %460 = fcmp fast ogt float %459, 1.000000e+00
  br i1 %460, label %461, label %471

; <label>:461                                     ; preds = %430
  %462 = fsub fast float %366, %274
  %463 = fsub fast float %367, %275
  %464 = fsub fast float %368, %276
  %465 = fmul fast float %462, %462
  %466 = fmul fast float %463, %463
  %467 = fadd fast float %465, %466
  %468 = fmul fast float %464, %464
  %469 = fadd fast float %467, %468
  %470 = call float @dx.op.unary.f32(i32 24, float %469)  ; Sqrt(value)
  br label %479

; <label>:471                                     ; preds = %430, %421
  %472 = phi float [ %459, %430 ], [ %348, %421 ]
  %473 = fmul fast float %346, %230
  %474 = uitofp i32 %226 to float
  %475 = call float @dx.op.binary.f32(i32 36, float %474, float %473)  ; FMin(a,b)
  %476 = fadd fast float %475, %347
  %477 = fcmp fast olt float %476, %334
  br i1 %477, label %338, label %478

; <label>:478                                     ; preds = %471
  br label %479

; <label>:479                                     ; preds = %478, %461, %310, %278, %234
  %480 = phi float [ %470, %461 ], [ -1.000000e+00, %278 ], [ -1.000000e+00, %234 ], [ -1.000000e+00, %310 ], [ -1.000000e+00, %478 ]
  %481 = phi float [ %459, %461 ], [ 0.000000e+00, %278 ], [ 0.000000e+00, %234 ], [ 0.000000e+00, %310 ], [ %472, %478 ]
  %482 = fcmp fast ult float %480, 0.000000e+00
  br i1 %482, label %488, label %483

; <label>:483                                     ; preds = %479
  %484 = fsub fast float 1.000000e+00, %481
  %485 = call float @dx.op.unary.f32(i32 7, float %484)  ; Saturate(value)
  %486 = call float @dx.op.binary.f32(i32 36, float %238, float %485)  ; FMin(a,b)
  %487 = call float @dx.op.binary.f32(i32 36, float %237, float %480)  ; FMin(a,b)
  br label %488

; <label>:488                                     ; preds = %483, %479
  %489 = phi float [ %486, %483 ], [ %238, %479 ]
  %490 = phi float [ %487, %483 ], [ %237, %479 ]
  %491 = phi i32 [ 1, %483 ], [ %236, %479 ]
  %492 = add nuw i32 %235, 1
  %493 = fcmp fast ogt float %489, 0x3F847AE140000000
  %494 = icmp ult i32 %492, %231
  %495 = and i1 %493, %494
  br i1 %495, label %234, label %496

; <label>:496                                     ; preds = %488
  br label %497

; <label>:497                                     ; preds = %496, %210
  %498 = phi i32 [ 0, %210 ], [ %491, %496 ]
  %499 = phi float [ %152, %210 ], [ %490, %496 ]
  %500 = phi float [ 1.000000e+00, %210 ], [ %489, %496 ]
  %501 = icmp ne i32 %498, 0
  %502 = fcmp fast olt float %499, %152
  %503 = and i1 %502, %501
  br i1 %503, label %504, label %506

; <label>:504                                     ; preds = %497
  %505 = call float @dx.op.binary.f32(i32 36, float %499, float %151)  ; FMin(a,b)
  br label %506

; <label>:506                                     ; preds = %504, %497
  %507 = phi float [ %500, %504 ], [ 1.000000e+00, %497 ]
  %508 = phi float [ %505, %504 ], [ %151, %497 ]
  %509 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 60)  ; CBufferLoadLegacy(handle,regIndex)
  %510 = extractvalue %dx.types.CBufRet.f32 %509, 0
  %511 = extractvalue %dx.types.CBufRet.f32 %509, 1
  %512 = extractvalue %dx.types.CBufRet.f32 %509, 2
  %513 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 69)  ; CBufferLoadLegacy(handle,regIndex)
  %514 = extractvalue %dx.types.CBufRet.f32 %513, 0
  %515 = extractvalue %dx.types.CBufRet.f32 %513, 1
  %516 = extractvalue %dx.types.CBufRet.f32 %513, 2
  %517 = fmul fast float %510, 2.097152e+06
  %518 = fmul fast float %511, 2.097152e+06
  %519 = fmul fast float %512, 2.097152e+06
  %520 = fmul fast float %94, -2.097152e+06
  %521 = fsub fast float %520, %90
  %522 = fsub fast float %521, %107
  %523 = fadd fast float %522, %514
  %524 = fadd fast float %523, %517
  %525 = fmul fast float %95, -2.097152e+06
  %526 = fsub fast float %525, %91
  %527 = fsub fast float %526, %110
  %528 = fadd fast float %527, %515
  %529 = fadd fast float %528, %518
  %530 = fmul fast float %96, -2.097152e+06
  %531 = fsub fast float %530, %92
  %532 = fsub fast float %531, %113
  %533 = fadd fast float %532, %516
  %534 = fadd fast float %533, %519
  %535 = fmul fast float %524, %524
  %536 = fmul fast float %529, %529
  %537 = fadd fast float %535, %536
  %538 = fmul fast float %534, %534
  %539 = fadd fast float %537, %538
  %540 = call float @dx.op.unary.f32(i32 24, float %539)  ; Sqrt(value)
  %541 = fmul fast float %540, 4.000000e+00
  %542 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %26, i32 53)  ; CBufferLoadLegacy(handle,regIndex)
  %543 = extractvalue %dx.types.CBufRet.f32 %542, 1
  %544 = fdiv fast float %541, %543
  %545 = fadd fast float %544, -3.000000e+00
  %546 = call float @dx.op.unary.f32(i32 7, float %545)  ; Saturate(value)
  %547 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %26, i32 54)  ; CBufferLoadLegacy(handle,regIndex)
  %548 = extractvalue %dx.types.CBufRet.f32 %547, 3
  %549 = fmul fast float %548, 0x3FE6666660000000
  %550 = fsub fast float %508, %549
  %551 = fmul fast float %548, 0x3FD3333340000000
  %552 = fdiv fast float %550, %551
  %553 = call float @dx.op.unary.f32(i32 7, float %552)  ; Saturate(value)
  %554 = call float @dx.op.binary.f32(i32 35, float %546, float %553)  ; FMax(a,b)
  %555 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %26, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %556 = extractvalue %dx.types.CBufRet.i32 %555, 0
  %557 = icmp eq i32 %556, 0
  %558 = fsub fast float 1.000000e+00, %507
  br i1 %557, label %816, label %559

; <label>:559                                     ; preds = %506
  %560 = call float @dx.op.unary.f32(i32 7, float %558)  ; Saturate(value)
  %561 = fmul fast float %508, %144
  %562 = fmul fast float %508, %145
  %563 = fmul fast float %508, %146
  %564 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %23, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %565 = extractvalue %dx.types.CBufRet.f32 %564, 3
  %566 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %23, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %567 = extractvalue %dx.types.CBufRet.f32 %566, 2
  %568 = fadd fast float %519, %516
  %569 = call float @dx.op.binary.f32(i32 36, float %568, float %567)  ; FMin(a,b)
  %570 = fsub fast float %563, %569
  %571 = fadd fast float %570, %516
  %572 = fadd fast float %571, %519
  %573 = call float @dx.op.dot3.f32(i32 55, float %561, float %562, float %572, float %561, float %562, float %572)  ; Dot3(ax,ay,az,bx,by,bz)
  %574 = call float @dx.op.binary.f32(i32 35, float %573, float 0x3E45798EE0000000)  ; FMax(a,b)
  %575 = call float @dx.op.unary.f32(i32 25, float %574)  ; Rsqrt(value)
  %576 = fmul fast float %575, %573
  %577 = fmul fast float %575, %561
  %578 = fmul fast float %575, %562
  %579 = fmul fast float %572, %575
  %580 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %23, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %581 = extractvalue %dx.types.CBufRet.f32 %566, 3
  %582 = call float @dx.op.binary.f32(i32 35, float 0.000000e+00, float %581)  ; FMax(a,b)
  %583 = fcmp fast ogt float %582, 0.000000e+00
  %584 = extractvalue %dx.types.CBufRet.f32 %566, 1
  %585 = extractvalue %dx.types.CBufRet.f32 %580, 1
  br i1 %583, label %589, label %586

; <label>:586                                     ; preds = %559
  %587 = extractvalue %dx.types.CBufRet.f32 %580, 0
  %588 = extractvalue %dx.types.CBufRet.f32 %566, 0
  br label %613

; <label>:589                                     ; preds = %559
  %590 = fmul fast float %582, %575
  %591 = fmul fast float %590, %572
  %592 = fadd fast float %591, %569
  %593 = fsub fast float %572, %591
  %594 = fsub fast float 1.000000e+00, %590
  %595 = fmul fast float %594, %576
  %596 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %23, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %597 = extractvalue %dx.types.CBufRet.f32 %596, 1
  %598 = fsub fast float %592, %597
  %599 = fmul fast float %598, %584
  %600 = call float @dx.op.binary.f32(i32 35, float -1.270000e+02, float %599)  ; FMax(a,b)
  %601 = extractvalue %dx.types.CBufRet.f32 %596, 0
  %602 = fsub fast float -0.000000e+00, %600
  %603 = call float @dx.op.unary.f32(i32 21, float %602)  ; Exp(value)
  %604 = fmul fast float %601, %603
  %605 = extractvalue %dx.types.CBufRet.f32 %580, 3
  %606 = fsub fast float %592, %605
  %607 = fmul fast float %606, %585
  %608 = call float @dx.op.binary.f32(i32 35, float -1.270000e+02, float %607)  ; FMax(a,b)
  %609 = extractvalue %dx.types.CBufRet.f32 %580, 2
  %610 = fsub fast float -0.000000e+00, %608
  %611 = call float @dx.op.unary.f32(i32 21, float %610)  ; Exp(value)
  %612 = fmul fast float %609, %611
  br label %613

; <label>:613                                     ; preds = %589, %586
  %614 = phi float [ %604, %589 ], [ %588, %586 ]
  %615 = phi float [ %612, %589 ], [ %587, %586 ]
  %616 = phi float [ %595, %589 ], [ %576, %586 ]
  %617 = phi float [ %593, %589 ], [ %572, %586 ]
  %618 = fmul fast float %584, %617
  %619 = call float @dx.op.binary.f32(i32 35, float -1.270000e+02, float %618)  ; FMax(a,b)
  %620 = fsub fast float -0.000000e+00, %619
  %621 = call float @dx.op.unary.f32(i32 21, float %620)  ; Exp(value)
  %622 = fsub fast float 1.000000e+00, %621
  %623 = fdiv fast float %622, %619
  %624 = fmul fast float %619, 0x3FCEBFBE00000000
  %625 = fsub fast float 0x3FE62E4300000000, %624
  %626 = call float @dx.op.unary.f32(i32 6, float %619)  ; FAbs(value)
  %627 = fcmp fast ogt float %626, 0x3F847AE140000000
  %628 = select i1 %627, float %623, float %625
  %629 = fmul fast float %628, %614
  %630 = fmul fast float %585, %617
  %631 = call float @dx.op.binary.f32(i32 35, float -1.270000e+02, float %630)  ; FMax(a,b)
  %632 = fsub fast float -0.000000e+00, %631
  %633 = call float @dx.op.unary.f32(i32 21, float %632)  ; Exp(value)
  %634 = fsub fast float 1.000000e+00, %633
  %635 = fdiv fast float %634, %631
  %636 = fmul fast float %631, 0x3FCEBFBE00000000
  %637 = fsub fast float 0x3FE62E4300000000, %636
  %638 = call float @dx.op.unary.f32(i32 6, float %631)  ; FAbs(value)
  %639 = fcmp fast ogt float %638, 0x3F847AE140000000
  %640 = select i1 %639, float %635, float %637
  %641 = fmul fast float %640, %615
  %642 = fadd fast float %641, %629
  %643 = extractvalue %dx.types.CBufRet.f32 %564, 0
  %644 = extractvalue %dx.types.CBufRet.f32 %564, 1
  %645 = extractvalue %dx.types.CBufRet.f32 %564, 2
  %646 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %23, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %647 = extractvalue %dx.types.CBufRet.f32 %646, 2
  %648 = fcmp fast ogt float %647, 0.000000e+00
  br i1 %648, label %649, label %685, !dx.controlflow.hints !37

; <label>:649                                     ; preds = %613
  %650 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %23, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %651 = extractvalue %dx.types.CBufRet.f32 %650, 0
  %652 = fmul fast float %651, %576
  %653 = extractvalue %dx.types.CBufRet.f32 %650, 1
  %654 = fadd fast float %652, %653
  %655 = call float @dx.op.unary.f32(i32 7, float %654)  ; Saturate(value)
  %656 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %23, i32 7)  ; CBufferLoadLegacy(handle,regIndex)
  %657 = extractvalue %dx.types.CBufRet.f32 %656, 1
  %658 = extractvalue %dx.types.CBufRet.f32 %656, 0
  %659 = fsub fast float -0.000000e+00, %658
  %660 = call float @dx.op.dot2.f32(i32 54, float %561, float %562, float %657, float %659)  ; Dot2(ax,ay,bx,by)
  %661 = call float @dx.op.dot2.f32(i32 54, float %561, float %562, float %658, float %657)  ; Dot2(ax,ay,bx,by)
  %662 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %11, %dx.types.ResourceProperties { i32 5, i32 1033 })  ; AnnotateHandle(res,props)  resource: TextureCube<4xF32>
  %663 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %14, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %664 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %662, %dx.types.Handle %663, float %660, float %661, float %572, float undef, i32 undef, i32 undef, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %665 = extractvalue %dx.types.ResRet.f32 %664, 0
  %666 = extractvalue %dx.types.ResRet.f32 %664, 1
  %667 = extractvalue %dx.types.ResRet.f32 %664, 2
  %668 = extractvalue %dx.types.CBufRet.f32 %650, 2
  %669 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %662, %dx.types.Handle %663, float %660, float %661, float %572, float undef, i32 undef, i32 undef, i32 undef, float %668)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %670 = extractvalue %dx.types.ResRet.f32 %669, 0
  %671 = extractvalue %dx.types.ResRet.f32 %669, 1
  %672 = extractvalue %dx.types.ResRet.f32 %669, 2
  %673 = fsub fast float %665, %670
  %674 = fsub fast float %666, %671
  %675 = fsub fast float %667, %672
  %676 = fmul fast float %673, %655
  %677 = fmul fast float %674, %655
  %678 = fmul fast float %675, %655
  %679 = fadd fast float %676, %670
  %680 = fadd fast float %677, %671
  %681 = fadd fast float %678, %672
  %682 = fmul fast float %679, %643
  %683 = fmul fast float %680, %644
  %684 = fmul fast float %681, %645
  br label %685

; <label>:685                                     ; preds = %649, %613
  %686 = phi float [ %682, %649 ], [ %643, %613 ]
  %687 = phi float [ %683, %649 ], [ %644, %613 ]
  %688 = phi float [ %684, %649 ], [ %645, %613 ]
  %689 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %23, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %690 = extractvalue %dx.types.CBufRet.f32 %689, 0
  %691 = extractvalue %dx.types.CBufRet.f32 %689, 1
  %692 = extractvalue %dx.types.CBufRet.f32 %689, 2
  %693 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 175)  ; CBufferLoadLegacy(handle,regIndex)
  %694 = extractvalue %dx.types.CBufRet.f32 %693, 1
  %695 = fmul fast float %694, %690
  %696 = fmul fast float %694, %691
  %697 = fmul fast float %694, %692
  %698 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %13, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %699 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %16, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %700 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %698, %dx.types.Handle %699, float 5.000000e-01, float 5.000000e-01, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %701 = extractvalue %dx.types.ResRet.f32 %700, 0
  %702 = extractvalue %dx.types.ResRet.f32 %700, 1
  %703 = extractvalue %dx.types.ResRet.f32 %700, 2
  %704 = fmul fast float %695, %701
  %705 = fmul fast float %696, %702
  %706 = fmul fast float %697, %703
  %707 = fadd fast float %704, %686
  %708 = fadd fast float %705, %687
  %709 = fadd fast float %706, %688
  %710 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %23, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %711 = extractvalue %dx.types.CBufRet.f32 %710, 3
  %712 = fcmp fast oge float %711, 0.000000e+00
  %713 = fcmp fast oeq float %647, 0.000000e+00
  %714 = and i1 %712, %713
  br i1 %714, label %715, label %786

; <label>:715                                     ; preds = %685
  %716 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %23, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %717 = extractvalue %dx.types.CBufRet.f32 %716, 0
  %718 = extractvalue %dx.types.CBufRet.f32 %716, 1
  %719 = extractvalue %dx.types.CBufRet.f32 %716, 2
  %720 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 159)  ; CBufferLoadLegacy(handle,regIndex)
  %721 = extractvalue %dx.types.CBufRet.f32 %720, 0
  %722 = extractvalue %dx.types.CBufRet.f32 %720, 1
  %723 = extractvalue %dx.types.CBufRet.f32 %720, 2
  %724 = fmul fast float %694, 0x3FB45F3060000000
  %725 = fmul fast float %724, %721
  %726 = fmul fast float %724, %722
  %727 = fmul fast float %724, %723
  %728 = fadd fast float %725, %717
  %729 = fadd fast float %726, %718
  %730 = fadd fast float %727, %719
  %731 = extractvalue %dx.types.CBufRet.f32 %716, 3
  %732 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 157)  ; CBufferLoadLegacy(handle,regIndex)
  %733 = extractvalue %dx.types.CBufRet.f32 %732, 0
  %734 = extractvalue %dx.types.CBufRet.f32 %732, 1
  %735 = extractvalue %dx.types.CBufRet.f32 %732, 2
  %736 = call float @dx.op.dot3.f32(i32 55, float %577, float %578, float %579, float %733, float %734, float %735)  ; Dot3(ax,ay,az,bx,by,bz)
  %737 = call float @dx.op.unary.f32(i32 7, float %736)  ; Saturate(value)
  %738 = call float @dx.op.unary.f32(i32 23, float %737)  ; Log(value)
  %739 = fmul fast float %738, %731
  %740 = call float @dx.op.unary.f32(i32 21, float %739)  ; Exp(value)
  %741 = fmul fast float %740, %728
  %742 = fmul fast float %740, %729
  %743 = fmul fast float %740, %730
  %744 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 160)  ; CBufferLoadLegacy(handle,regIndex)
  %745 = extractvalue %dx.types.CBufRet.f32 %744, 3
  %746 = fcmp fast ogt float %745, 0.000000e+00
  br i1 %746, label %747, label %772

; <label>:747                                     ; preds = %715
  %748 = extractvalue %dx.types.CBufRet.f32 %744, 0
  %749 = extractvalue %dx.types.CBufRet.f32 %744, 1
  %750 = extractvalue %dx.types.CBufRet.f32 %744, 2
  %751 = fmul fast float %724, %748
  %752 = fmul fast float %724, %749
  %753 = fmul fast float %724, %750
  %754 = fadd fast float %751, %717
  %755 = fadd fast float %752, %718
  %756 = fadd fast float %753, %719
  %757 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 158)  ; CBufferLoadLegacy(handle,regIndex)
  %758 = extractvalue %dx.types.CBufRet.f32 %757, 0
  %759 = extractvalue %dx.types.CBufRet.f32 %757, 1
  %760 = extractvalue %dx.types.CBufRet.f32 %757, 2
  %761 = call float @dx.op.dot3.f32(i32 55, float %577, float %578, float %579, float %758, float %759, float %760)  ; Dot3(ax,ay,az,bx,by,bz)
  %762 = call float @dx.op.unary.f32(i32 7, float %761)  ; Saturate(value)
  %763 = call float @dx.op.unary.f32(i32 23, float %762)  ; Log(value)
  %764 = fmul fast float %763, %731
  %765 = call float @dx.op.unary.f32(i32 21, float %764)  ; Exp(value)
  %766 = fmul fast float %765, %754
  %767 = fmul fast float %765, %755
  %768 = fmul fast float %765, %756
  %769 = fadd fast float %766, %741
  %770 = fadd fast float %767, %742
  %771 = fadd fast float %768, %743
  br label %772

; <label>:772                                     ; preds = %747, %715
  %773 = phi float [ %769, %747 ], [ %741, %715 ]
  %774 = phi float [ %770, %747 ], [ %742, %715 ]
  %775 = phi float [ %771, %747 ], [ %743, %715 ]
  %776 = fsub fast float %616, %711
  %777 = call float @dx.op.binary.f32(i32 35, float %776, float 0.000000e+00)  ; FMax(a,b)
  %778 = fmul fast float %642, %777
  %779 = fsub fast float -0.000000e+00, %778
  %780 = call float @dx.op.unary.f32(i32 21, float %779)  ; Exp(value)
  %781 = call float @dx.op.unary.f32(i32 7, float %780)  ; Saturate(value)
  %782 = fsub fast float 1.000000e+00, %781
  %783 = fmul fast float %782, %773
  %784 = fmul fast float %782, %774
  %785 = fmul fast float %782, %775
  br label %786

; <label>:786                                     ; preds = %772, %685
  %787 = phi float [ %783, %772 ], [ 0.000000e+00, %685 ]
  %788 = phi float [ %784, %772 ], [ 0.000000e+00, %685 ]
  %789 = phi float [ %785, %772 ], [ 0.000000e+00, %685 ]
  %790 = fmul fast float %616, %642
  %791 = fsub fast float -0.000000e+00, %790
  %792 = call float @dx.op.unary.f32(i32 21, float %791)  ; Exp(value)
  %793 = call float @dx.op.unary.f32(i32 7, float %792)  ; Saturate(value)
  %794 = call float @dx.op.binary.f32(i32 35, float %793, float %565)  ; FMax(a,b)
  %795 = extractvalue %dx.types.CBufRet.f32 %646, 3
  %796 = fcmp fast ogt float %795, 0.000000e+00
  %797 = fcmp fast ogt float %576, %795
  %798 = and i1 %796, %797
  %799 = select i1 %798, float 0.000000e+00, float %787
  %800 = select i1 %798, float 0.000000e+00, float %788
  %801 = select i1 %798, float 0.000000e+00, float %789
  %802 = fsub fast float 1.000000e+00, %794
  %803 = select i1 %798, float 0.000000e+00, float %802
  %804 = fmul fast float %803, %707
  %805 = fmul fast float %803, %708
  %806 = fmul fast float %803, %709
  %807 = fadd fast float %804, %799
  %808 = fadd fast float %805, %800
  %809 = fadd fast float %806, %801
  %810 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 132)  ; CBufferLoadLegacy(handle,regIndex)
  %811 = extractvalue %dx.types.CBufRet.f32 %810, 2
  %812 = fmul fast float %811, %560
  %813 = fmul fast float %812, %807
  %814 = fmul fast float %812, %808
  %815 = fmul fast float %812, %809
  br label %816

; <label>:816                                     ; preds = %786, %506
  %817 = phi float [ %813, %786 ], [ 0.000000e+00, %506 ]
  %818 = phi float [ %814, %786 ], [ 0.000000e+00, %506 ]
  %819 = phi float [ %815, %786 ], [ 0.000000e+00, %506 ]
  %820 = fmul fast float %554, %558
  %821 = fadd fast float %820, %507
  %822 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %24, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %823 = extractvalue %dx.types.CBufRet.f32 %822, 1
  %824 = fcmp fast ogt float %823, 0.000000e+00
  br i1 %824, label %825, label %857

; <label>:825                                     ; preds = %816
  %826 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %26, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %827 = extractvalue %dx.types.CBufRet.f32 %826, 1
  %828 = fcmp fast ogt float %827, 0.000000e+00
  br i1 %828, label %829, label %857

; <label>:829                                     ; preds = %825
  %830 = extractvalue %dx.types.CBufRet.f32 %826, 2
  %831 = extractvalue %dx.types.CBufRet.f32 %822, 0
  %832 = call float @dx.op.binary.f32(i32 35, float %830, float 0x3F50624DE0000000)  ; FMax(a,b)
  %833 = call float @dx.op.unary.f32(i32 23, float %832)  ; Log(value)
  %834 = fmul fast float %833, 0x3FF3333340000000
  %835 = fadd fast float %831, -2.000000e+00
  %836 = fadd fast float %835, %834
  %837 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %12, %dx.types.ResourceProperties { i32 5, i32 1033 })  ; AnnotateHandle(res,props)  resource: TextureCube<4xF32>
  %838 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %15, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %839 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %837, %dx.types.Handle %838, float %144, float %145, float %146, float undef, i32 undef, i32 undef, i32 undef, float %836)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %840 = extractvalue %dx.types.ResRet.f32 %839, 0
  %841 = extractvalue %dx.types.ResRet.f32 %839, 1
  %842 = extractvalue %dx.types.ResRet.f32 %839, 2
  %843 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 183)  ; CBufferLoadLegacy(handle,regIndex)
  %844 = extractvalue %dx.types.CBufRet.f32 %843, 0
  %845 = extractvalue %dx.types.CBufRet.f32 %843, 1
  %846 = extractvalue %dx.types.CBufRet.f32 %843, 2
  %847 = fmul fast float %844, %840
  %848 = fmul fast float %845, %841
  %849 = fmul fast float %846, %842
  %850 = extractvalue %dx.types.CBufRet.f32 %826, 3
  %851 = fmul fast float %850, %508
  %852 = call float @dx.op.unary.f32(i32 7, float %851)  ; Saturate(value)
  %853 = fmul fast float %852, %827
  %854 = fmul fast float %847, %853
  %855 = fmul fast float %848, %853
  %856 = fmul fast float %849, %853
  br label %857

; <label>:857                                     ; preds = %829, %825, %816
  %858 = phi float [ %854, %829 ], [ 0.000000e+00, %825 ], [ 0.000000e+00, %816 ]
  %859 = phi float [ %855, %829 ], [ 0.000000e+00, %825 ], [ 0.000000e+00, %816 ]
  %860 = phi float [ %856, %829 ], [ 0.000000e+00, %825 ], [ 0.000000e+00, %816 ]
  %861 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 132)  ; CBufferLoadLegacy(handle,regIndex)
  %862 = extractvalue %dx.types.CBufRet.f32 %861, 2
  %863 = fmul fast float %862, %858
  %864 = fmul fast float %862, %859
  %865 = fmul fast float %862, %860
  %866 = fadd fast float %863, %817
  %867 = fadd fast float %864, %818
  %868 = fadd fast float %865, %819
  %869 = call float @dx.op.binary.f32(i32 35, float %867, float %868)  ; FMax(a,b)
  %870 = call float @dx.op.binary.f32(i32 35, float %866, float %869)  ; FMax(a,b)
  %871 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %26, i32 41)  ; CBufferLoadLegacy(handle,regIndex)
  %872 = extractvalue %dx.types.CBufRet.f32 %871, 2
  %873 = fcmp fast ogt float %870, %872
  br i1 %873, label %874, label %879

; <label>:874                                     ; preds = %857
  %875 = fdiv fast float %872, %870
  %876 = fmul fast float %875, %866
  %877 = fmul fast float %875, %867
  %878 = fmul fast float %875, %868
  br label %879

; <label>:879                                     ; preds = %874, %857
  %880 = phi float [ %876, %874 ], [ %866, %857 ]
  %881 = phi float [ %877, %874 ], [ %867, %857 ]
  %882 = phi float [ %878, %874 ], [ %868, %857 ]
  %883 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 4098, i32 777 })  ; AnnotateHandle(res,props)  resource: RWTexture2D<3xF32>
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %883, i32 %36, i32 %37, i32 undef, float %880, float %881, float %882, float %880, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  %884 = uitofp i32 %36 to float
  %885 = uitofp i32 %37 to float
  %886 = fadd fast float %884, 5.000000e-01
  %887 = fadd fast float %885, 5.000000e-01
  %888 = call float @dx.op.dot2.f32(i32 54, float %886, float %887, float 0x3FB12E2860000000, float 0x3F77E8B200000000)  ; Dot2(ax,ay,bx,by)
  %889 = call float @dx.op.unary.f32(i32 22, float %888)  ; Frc(value)
  %890 = fmul fast float %889, 0x404A7DD040000000
  %891 = call float @dx.op.unary.f32(i32 22, float %890)  ; Frc(value)
  %892 = fcmp fast olt float %821, %891
  %893 = call float @dx.op.binary.f32(i32 35, float %508, float 0.000000e+00)  ; FMax(a,b)
  %894 = select i1 %892, float -1.000000e+00, float 1.000000e+00
  %895 = fmul fast float %894, %893
  %896 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %2, %dx.types.ResourceProperties { i32 4098, i32 265 })  ; AnnotateHandle(res,props)  resource: RWTexture2D<F32>
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %896, i32 %36, i32 %37, i32 undef, float %895, float %895, float %895, float %895, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  br label %897

; <label>:897                                     ; preds = %879, %0
  ret void
}

; Function Attrs: nounwind readnone
declare i32 @dx.op.threadId.i32(i32, i32) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32, %dx.types.Handle, i32, i32) #1

; Function Attrs: nounwind
declare void @dx.op.textureStore.f32(i32, %dx.types.Handle, i32, i32, i32, float, float, float, float, i8) #2

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32) #1

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32) #1

; Function Attrs: nounwind readnone
declare float @dx.op.legacyF16ToF32(i32, i32) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.binary.i32(i32, i32, i32) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32, %dx.types.Handle, i32, i32, i8, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32, %dx.types.Handle, i32, i32, i8, i32) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.unary.i32(i32, i32) #0

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.dot2.f32(i32, float, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #1

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #1

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.annotateHandle(i32, %dx.types.Handle, %dx.types.ResourceProperties) #0

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.createHandleFromBinding(i32, %dx.types.ResBind, i32, i1) #0

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind readonly }
attributes #2 = { nounwind }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.entryPoints = !{!33}

!0 = !{!"dxc(private) 1.7.0.0 (private, 00000000)"}
!1 = !{i32 1, i32 6}
!2 = !{i32 1, i32 7}
!3 = !{!"cs", i32 6, i32 6}
!4 = !{!5, !20, !23, !29}
!5 = !{!6, !8, !9, !10, !12, !14, !15, !16, !17, !18, !19}
!6 = !{i32 0, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 0, i32 1, i32 2, i32 0, !7}
!7 = !{i32 0, i32 9}
!8 = !{i32 1, %"class.TextureCube<vector<float, 4> >"* undef, !"", i32 0, i32 1, i32 1, i32 5, i32 0, !7}
!9 = !{i32 2, %"class.TextureCube<vector<float, 4> >"* undef, !"", i32 0, i32 2, i32 1, i32 5, i32 0, !7}
!10 = !{i32 3, %"class.Buffer<unsigned int>"* undef, !"", i32 0, i32 3, i32 1, i32 10, i32 0, !11}
!11 = !{i32 0, i32 5}
!12 = !{i32 4, %"class.StructuredBuffer<FPackedVirtualVoxelNodeDesc>"* undef, !"", i32 0, i32 4, i32 1, i32 12, i32 0, !13}
!13 = !{i32 1, i32 32}
!14 = !{i32 5, %"class.Texture3D<unsigned int>"* undef, !"", i32 0, i32 5, i32 1, i32 4, i32 0, !11}
!15 = !{i32 6, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 6, i32 1, i32 2, i32 0, !7}
!16 = !{i32 7, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 7, i32 1, i32 2, i32 0, !7}
!17 = !{i32 8, %"class.Texture2D<unsigned int>"* undef, !"", i32 0, i32 8, i32 1, i32 2, i32 0, !11}
!18 = !{i32 9, %"class.Buffer<unsigned int>"* undef, !"", i32 0, i32 9, i32 1, i32 10, i32 0, !11}
!19 = !{i32 10, %"class.Buffer<unsigned int>"* undef, !"", i32 0, i32 10, i32 1, i32 10, i32 0, !11}
!20 = !{!21, !22}
!21 = !{i32 0, %"class.RWTexture2D<float>"* undef, !"", i32 0, i32 0, i32 1, i32 2, i1 false, i1 false, i1 false, !7}
!22 = !{i32 1, %"class.RWTexture2D<vector<float, 3> >"* undef, !"", i32 0, i32 1, i32 1, i32 2, i1 false, i1 false, i1 false, !7}
!23 = !{!24, !25, !26, !27, !28}
!24 = !{i32 0, %_RootShaderParameters* undef, !"", i32 0, i32 0, i32 1, i32 900, null}
!25 = !{i32 1, %hostlayout.UniformBufferConstants_View* undef, !"", i32 0, i32 1, i32 1, i32 5484, null}
!26 = !{i32 2, %UniformBufferConstants_ReflectionStruct* undef, !"", i32 0, i32 2, i32 1, i32 76, null}
!27 = !{i32 3, %UniformBufferConstants_FogStruct* undef, !"", i32 0, i32 3, i32 1, i32 180, null}
!28 = !{i32 4, %UniformBufferConstants_VirtualVoxel* undef, !"", i32 0, i32 4, i32 1, i32 228, null}
!29 = !{!30, !31, !32}
!30 = !{i32 0, %struct.SamplerState* undef, !"", i32 0, i32 0, i32 1, i32 0, null}
!31 = !{i32 1, %struct.SamplerState* undef, !"", i32 0, i32 1, i32 1, i32 0, null}
!32 = !{i32 2, %struct.SamplerState* undef, !"", i32 0, i32 2, i32 1, i32 0, null}
!33 = !{void ()* @ReflectionTraceMeshSDFsCS, !"ReflectionTraceMeshSDFsCS", null, !4, !34}
!34 = !{i32 0, i64 16, i32 4, !35, i32 5, !36}
!35 = !{i32 32, i32 1, i32 1}
!36 = !{i32 0}
!37 = distinct !{!37, !"dx.controlflow.hints", i32 1}
